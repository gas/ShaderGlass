/*
ShaderGlass shader crt-shaders-hyllian\crt-hyllian-3d imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/crt/shaders/hyllian/crt-hyllian-3d.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


Hyllian's CRT Shader

Copyright (C) 2011-2016 Hyllian - sergiogdb@gmail.com
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

// Horizontal cubic filter.
// Some known filters use these values:
//    B = 0.0, C = 0.0  =>  Hermite cubic filter.
//    B = 1.0, C = 0.0  =>  Cubic B-Spline filter.
//    B = 0.0, C = 0.5  =>  Catmull-Rom Spline filter. This is the default used in this shader.
//    B = C = 1.0/3.0   =>  Mitchell-Netravali cubic filter.
//    B = 0.3782, C = 0.3109  =>  Robidoux filter.
//    B = 0.2620, C = 0.3690  =>  Robidoux Sharp filter.
//    B = 0.36, C = 0.28  =>  My best config for ringing elimination in pixel art (Hyllian).
// For more info, see: http://www.imagemagick.org/Usage/img_diagrams/cubic_survey.gif
// Change these params to configure the horizontal filter.
//  Get min/max samples
// Anti-ringing

*/

#pragma once

namespace RetroArchCrtShadersHyllianCrtHyllian3dShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,110,239,
1,38,44,138,120,137,
121,214,212,137,93,170,
129,5,1,0,0,0,
140,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
240,2,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,8,1,
0,0,80,0,1,0,
66,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,6,0,
0,0,1,0,0,0,
0,0,0,0,4,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,129,150,
73,13,132,160,142,51,
137,174,11,232,191,29,
253,253,1,0,0,0,
60,21,0,0,5,0,
0,0,52,0,0,0,
236,5,0,0,32,6,
0,0,84,6,0,0,
160,20,0,0,82,68,
69,70,176,5,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
133,5,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,18,0,0,0,
208,0,0,0,112,0,
0,0,0,0,0,0,
0,0,0,0,160,3,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,188,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,224,3,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
188,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
244,3,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,188,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,6,4,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,32,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,68,4,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
96,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
132,4,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,96,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,152,4,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,96,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,168,4,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
96,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
186,4,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,96,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,205,4,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,96,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,222,4,0,0,
76,0,0,0,4,0,
0,0,2,0,0,0,
96,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
241,4,0,0,80,0,
0,0,4,0,0,0,
2,0,0,0,96,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,2,5,
0,0,84,0,0,0,
4,0,0,0,2,0,
0,0,96,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,21,5,0,0,
88,0,0,0,4,0,
0,0,2,0,0,0,
96,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
39,5,0,0,92,0,
0,0,4,0,0,0,
2,0,0,0,96,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,65,5,
0,0,96,0,0,0,
4,0,0,0,2,0,
0,0,96,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,87,5,0,0,
100,0,0,0,4,0,
0,0,2,0,0,0,
96,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
109,5,0,0,104,0,
0,0,4,0,0,0,
2,0,0,0,96,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,178,3,
0,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,112,97,
114,97,109,115,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,24,4,0,0,
112,97,114,97,109,115,
95,67,82,84,95,77,
85,76,82,69,83,95,
88,0,102,108,111,97,
116,0,171,171,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
88,4,0,0,112,97,
114,97,109,115,95,67,
82,84,95,77,85,76,
82,69,83,95,89,0,
112,97,114,97,109,115,
95,80,72,79,83,80,
72,79,82,0,112,97,
114,97,109,115,95,73,
110,112,117,116,71,97,
109,109,97,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,71,
97,109,109,97,0,112,
97,114,97,109,115,95,
83,72,65,82,80,78,
69,83,83,0,112,97,
114,97,109,115,95,67,
79,76,79,82,95,66,
79,79,83,84,0,112,
97,114,97,109,115,95,
82,69,68,95,66,79,
79,83,84,0,112,97,
114,97,109,115,95,71,
82,69,69,78,95,66,
79,79,83,84,0,112,
97,114,97,109,115,95,
66,76,85,69,95,66,
79,79,83,84,0,112,
97,114,97,109,115,95,
83,67,65,78,76,73,
78,69,83,95,83,84,
82,69,78,71,84,72,
0,112,97,114,97,109,
115,95,66,69,65,77,
95,77,73,78,95,87,
73,68,84,72,0,112,
97,114,97,109,115,95,
66,69,65,77,95,77,
65,88,95,87,73,68,
84,72,0,112,97,114,
97,109,115,95,67,82,
84,95,65,78,84,73,
95,82,73,78,71,73,
78,71,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,171,171,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,68,14,
0,0,80,0,0,0,
145,3,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,7,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,11,0,0,0,
56,0,0,9,18,0,
16,0,0,0,0,0,
10,128,32,0,1,0,
0,0,0,0,0,0,
42,128,32,0,1,0,
0,0,4,0,0,0,
14,0,0,8,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,26,128,32,0,
1,0,0,0,3,0,
0,0,14,0,0,9,
34,0,16,0,0,0,
0,0,26,128,32,0,
1,0,0,0,0,0,
0,0,42,128,32,0,
1,0,0,0,3,0,
0,0,50,0,0,12,
194,0,16,0,0,0,
0,0,6,20,16,0,
0,0,0,0,6,4,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,191,0,0,
0,63,65,0,0,5,
50,0,16,0,1,0,
0,0,230,10,16,0,
0,0,0,0,26,0,
0,5,194,0,16,0,
2,0,0,0,166,14,
16,0,0,0,0,0,
0,0,0,10,194,0,
16,0,0,0,0,0,
6,4,16,0,1,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,63,
0,0,0,63,14,0,
0,7,194,0,16,0,
0,0,0,0,166,14,
16,0,0,0,0,0,
6,4,16,0,0,0,
0,0,14,0,0,10,
50,0,16,0,1,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,128,63,70,0,
16,0,0,0,0,0,
54,0,0,5,66,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
0,0,0,0,0,8,
242,0,16,0,3,0,
0,0,230,14,16,0,
0,0,0,0,134,6,
16,128,65,0,0,0,
1,0,0,0,0,0,
0,8,50,0,16,0,
0,0,0,0,102,10,
16,128,65,0,0,0,
1,0,0,0,70,0,
16,0,3,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,4,0,
0,0,70,0,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,47,0,0,5,
114,0,16,0,4,0,
0,0,70,2,16,0,
4,0,0,0,56,0,
0,8,114,0,16,0,
4,0,0,0,70,2,
16,0,4,0,0,0,
6,128,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,114,0,
16,0,4,0,0,0,
70,2,16,0,4,0,
0,0,54,0,0,5,
66,0,16,0,5,0,
0,0,1,64,0,0,
0,0,128,63,56,0,
0,7,34,0,16,0,
2,0,0,0,42,0,
16,0,2,0,0,0,
42,0,16,0,2,0,
0,0,56,0,0,7,
18,0,16,0,2,0,
0,0,42,0,16,0,
2,0,0,0,26,0,
16,0,2,0,0,0,
54,0,0,5,50,0,
16,0,5,0,0,0,
70,0,16,0,2,0,
0,0,16,0,0,10,
18,0,16,0,0,0,
0,0,2,64,0,0,
0,0,192,63,0,0,
32,192,0,0,128,63,
0,0,0,0,70,2,
16,0,5,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,6,0,
0,0,230,10,16,0,
3,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
3,0,0,0,70,0,
16,0,3,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,47,0,
0,5,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
56,0,0,8,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,6,128,32,0,
1,0,0,0,4,0,
0,0,25,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,47,0,
0,5,114,0,16,0,
6,0,0,0,70,2,
16,0,6,0,0,0,
56,0,0,8,114,0,
16,0,6,0,0,0,
70,2,16,0,6,0,
0,0,6,128,32,0,
1,0,0,0,4,0,
0,0,25,0,0,5,
114,0,16,0,6,0,
0,0,70,2,16,0,
6,0,0,0,56,0,
0,7,114,0,16,0,
7,0,0,0,6,0,
16,0,0,0,0,0,
70,2,16,0,6,0,
0,0,16,0,0,10,
34,0,16,0,0,0,
0,0,2,64,0,0,
0,0,0,191,0,0,
128,63,0,0,0,191,
0,0,0,0,70,2,
16,0,2,0,0,0,
50,0,0,9,114,0,
16,0,4,0,0,0,
86,5,16,0,0,0,
0,0,70,2,16,0,
4,0,0,0,70,2,
16,0,7,0,0,0,
0,0,0,7,194,0,
16,0,5,0,0,0,
166,14,16,0,0,0,
0,0,6,8,16,0,
1,0,0,0,0,0,
0,8,50,0,16,0,
7,0,0,0,102,10,
16,128,65,0,0,0,
1,0,0,0,230,10,
16,0,5,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,8,0,
0,0,230,10,16,0,
5,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,47,0,0,5,
114,0,16,0,8,0,
0,0,70,2,16,0,
8,0,0,0,56,0,
0,8,114,0,16,0,
8,0,0,0,70,2,
16,0,8,0,0,0,
6,128,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,114,0,
16,0,8,0,0,0,
70,2,16,0,8,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
7,0,0,0,70,0,
16,0,7,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,47,0,
0,5,114,0,16,0,
7,0,0,0,70,2,
16,0,7,0,0,0,
56,0,0,8,114,0,
16,0,7,0,0,0,
70,2,16,0,7,0,
0,0,6,128,32,0,
1,0,0,0,4,0,
0,0,25,0,0,5,
114,0,16,0,7,0,
0,0,70,2,16,0,
7,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,2,64,
0,0,0,0,192,191,
0,0,0,64,0,0,
0,63,0,0,0,0,
70,2,16,0,2,0,
0,0,15,0,0,10,
18,0,16,0,2,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,191,0,0,0,0,
0,0,0,0,70,0,
16,0,5,0,0,0,
50,0,0,9,114,0,
16,0,4,0,0,0,
246,15,16,0,1,0,
0,0,70,2,16,0,
7,0,0,0,70,2,
16,0,4,0,0,0,
50,0,0,12,98,0,
16,0,2,0,0,0,
6,2,16,0,1,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,64,0,0,0,64,
0,0,0,0,166,11,
16,0,0,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,5,0,
0,0,230,10,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,47,0,0,5,
114,0,16,0,5,0,
0,0,70,2,16,0,
5,0,0,0,56,0,
0,8,114,0,16,0,
5,0,0,0,70,2,
16,0,5,0,0,0,
6,128,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,114,0,
16,0,5,0,0,0,
70,2,16,0,5,0,
0,0,0,0,0,8,
194,0,16,0,0,0,
0,0,166,6,16,128,
65,0,0,0,1,0,
0,0,86,9,16,0,
2,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,1,0,0,0,
150,5,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
47,0,0,5,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,56,0,0,8,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,6,128,
32,0,1,0,0,0,
4,0,0,0,25,0,
0,5,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,9,0,
0,0,230,10,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,47,0,0,5,
114,0,16,0,9,0,
0,0,70,2,16,0,
9,0,0,0,56,0,
0,8,114,0,16,0,
9,0,0,0,70,2,
16,0,9,0,0,0,
6,128,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,114,0,
16,0,9,0,0,0,
70,2,16,0,9,0,
0,0,50,0,0,9,
114,0,16,0,4,0,
0,0,6,0,16,0,
2,0,0,0,70,2,
16,0,9,0,0,0,
70,2,16,0,4,0,
0,0,51,0,0,7,
114,0,16,0,9,0,
0,0,70,2,16,0,
8,0,0,0,70,2,
16,0,7,0,0,0,
52,0,0,7,114,0,
16,0,7,0,0,0,
70,2,16,0,8,0,
0,0,70,2,16,0,
7,0,0,0,51,0,
0,7,114,0,16,0,
10,0,0,0,70,2,
16,0,5,0,0,0,
70,2,16,0,6,0,
0,0,52,0,0,7,
114,0,16,0,6,0,
0,0,70,2,16,0,
5,0,0,0,70,2,
16,0,6,0,0,0,
56,0,0,7,210,0,
16,0,0,0,0,0,
6,0,16,0,0,0,
0,0,6,9,16,0,
5,0,0,0,50,0,
0,9,114,0,16,0,
0,0,0,0,86,5,
16,0,0,0,0,0,
70,2,16,0,3,0,
0,0,134,3,16,0,
0,0,0,0,50,0,
0,9,114,0,16,0,
0,0,0,0,246,15,
16,0,1,0,0,0,
70,2,16,0,8,0,
0,0,70,2,16,0,
0,0,0,0,50,0,
0,9,114,0,16,0,
0,0,0,0,6,0,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
0,0,0,0,52,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,7,0,0,0,
70,2,16,0,6,0,
0,0,51,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
9,0,0,0,70,2,
16,0,10,0,0,0,
52,0,0,7,114,0,
16,0,3,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
4,0,0,0,52,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,2,0,
0,0,51,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
51,0,0,7,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
3,0,0,0,0,0,
0,8,114,0,16,0,
1,0,0,0,70,2,
16,128,65,0,0,0,
4,0,0,0,70,2,
16,0,1,0,0,0,
50,0,0,10,114,0,
16,0,1,0,0,0,
166,138,32,0,1,0,
0,0,6,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
4,0,0,0,0,0,
0,8,114,0,16,0,
2,0,0,0,70,2,
16,128,65,0,0,0,
0,0,0,0,70,2,
16,0,2,0,0,0,
50,0,0,10,114,0,
16,0,0,0,0,0,
166,138,32,0,1,0,
0,0,6,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
0,0,0,0,0,0,
0,10,130,0,16,0,
0,0,0,0,10,128,
32,128,65,0,0,0,
1,0,0,0,6,0,
0,0,26,128,32,0,
1,0,0,0,6,0,
0,0,50,0,0,10,
114,0,16,0,2,0,
0,0,70,2,16,0,
1,0,0,0,246,15,
16,0,0,0,0,0,
6,128,32,0,1,0,
0,0,6,0,0,0,
50,0,0,10,114,0,
16,0,3,0,0,0,
70,2,16,0,0,0,
0,0,246,15,16,0,
0,0,0,0,6,128,
32,0,1,0,0,0,
6,0,0,0,0,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,149,191,
214,51,149,191,214,51,
149,191,214,51,0,0,
0,0,0,0,0,10,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,149,191,214,51,
149,191,214,51,149,191,
214,51,0,0,0,0,
14,32,0,7,114,0,
16,0,2,0,0,0,
246,15,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,0,0,
0,8,130,0,16,0,
0,0,0,0,58,0,
16,128,65,0,0,0,
2,0,0,0,1,64,
0,0,0,0,128,63,
14,32,0,7,114,0,
16,0,3,0,0,0,
246,15,16,0,0,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,7,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
56,0,0,8,130,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
32,193,58,128,32,0,
1,0,0,0,5,0,
0,0,56,0,0,7,
114,0,16,0,2,0,
0,0,246,15,16,0,
0,0,0,0,70,2,
16,0,2,0,0,0,
56,0,0,7,114,0,
16,0,3,0,0,0,
246,15,16,0,0,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,59,170,
184,63,59,170,184,63,
59,170,184,63,0,0,
0,0,25,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,7,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,10,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,59,170,184,63,
59,170,184,63,59,170,
184,63,0,0,0,0,
25,0,0,5,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,50,32,0,9,
114,0,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,0,0,
0,0,56,0,0,9,
114,0,16,0,1,0,
0,0,246,143,32,0,
1,0,0,0,4,0,
0,0,70,130,32,0,
1,0,0,0,5,0,
0,0,56,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,8,130,0,
16,0,0,0,0,0,
10,16,16,0,0,0,
0,0,10,128,32,0,
1,0,0,0,2,0,
0,0,56,0,0,8,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
0,0,0,0,14,0,
0,8,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
10,128,32,0,1,0,
0,0,0,0,0,0,
56,0,0,7,18,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,63,65,0,
0,5,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
50,0,0,10,130,0,
16,0,0,0,0,0,
10,0,16,128,65,0,
0,0,1,0,0,0,
1,64,0,0,0,0,
0,64,58,0,16,0,
0,0,0,0,65,0,
0,5,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
50,0,0,15,114,0,
16,0,1,0,0,0,
246,15,16,0,0,0,
0,0,2,64,0,0,
154,153,153,190,154,153,
153,62,154,153,153,190,
0,0,0,0,2,64,
0,0,0,0,0,0,
154,153,153,190,0,0,
0,0,0,0,0,0,
50,0,0,13,114,0,
16,0,1,0,0,0,
246,143,32,0,1,0,
0,0,3,0,0,0,
70,2,16,0,1,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,56,0,
0,7,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,47,0,0,5,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,14,0,
0,11,130,0,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,128,63,
26,128,32,0,1,0,
0,0,4,0,0,0,
56,0,0,7,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,246,15,16,0,
0,0,0,0,25,0,
0,5,114,32,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,62,0,0,1,
83,84,65,84,148,0,
0,0,115,0,0,0,
11,0,0,0,0,0,
0,0,2,0,0,0,
102,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,8,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
4,0,0,0,0,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};

}

namespace RetroArch
{
class CrtShadersHyllianCrtHyllian3dShaderDef : public ShaderDef
{
public:
	CrtShadersHyllianCrtHyllian3dShaderDef() : ShaderDef{}
	{
		Name = "crt-hyllian-3d";
		VertexByteCode = RetroArchCrtShadersHyllianCrtHyllian3dShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersHyllianCrtHyllian3dShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersHyllianCrtHyllian3dShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersHyllianCrtHyllian3dShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("CRT_MULRES_X", -1, 52, 4, 1.000000f, 8.000000f, 2.000000f));
		Params.push_back(ShaderParam("CRT_MULRES_Y", -1, 56, 4, 1.000000f, 8.000000f, 2.000000f));
		Params.push_back(ShaderParam("PHOSPHOR", -1, 60, 4, 0.000000f, 1.000000f, 1.000000f));
		Params.push_back(ShaderParam("InputGamma", -1, 64, 4, 0.000000f, 5.000000f, 2.400000f));
		Params.push_back(ShaderParam("OutputGamma", -1, 68, 4, 0.000000f, 5.000000f, 2.200000f));
		Params.push_back(ShaderParam("SHARPNESS", -1, 72, 4, 1.000000f, 5.000000f, 1.000000f));
		Params.push_back(ShaderParam("COLOR_BOOST", -1, 76, 4, 1.000000f, 2.000000f, 1.500000f));
		Params.push_back(ShaderParam("RED_BOOST", -1, 80, 4, 1.000000f, 2.000000f, 1.000000f));
		Params.push_back(ShaderParam("GREEN_BOOST", -1, 84, 4, 1.000000f, 2.000000f, 1.000000f));
		Params.push_back(ShaderParam("BLUE_BOOST", -1, 88, 4, 1.000000f, 2.000000f, 1.000000f));
		Params.push_back(ShaderParam("SCANLINES_STRENGTH", -1, 92, 4, 0.000000f, 1.000000f, 0.720000f));
		Params.push_back(ShaderParam("BEAM_MIN_WIDTH", -1, 96, 4, 0.000000f, 1.000000f, 0.860000f));
		Params.push_back(ShaderParam("BEAM_MAX_WIDTH", -1, 100, 4, 0.000000f, 1.000000f, 1.000000f));
		Params.push_back(ShaderParam("CRT_ANTI_RINGING", -1, 104, 4, 0.000000f, 1.000000f, 0.800000f));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
