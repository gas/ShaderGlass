/*
ShaderGlass shader crt-shaders\dotmask imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/crt/shaders/dotmask.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


Dot Mask
Authors: cgwg, Timothy Lottes, torridgristle
License: GPL

Note: This shader is just the dotmask functions from cgwg's CRT shader and crt-lottes plus torridgristle's mask.

// Lottes' public domain mask code
// Shadow mask.
// Very compressed TV style shadow mask.
// Aperture-grille.
// Stretched VGA style shadow mask (same as prior shaders).
// VGA style shadow mask.
// torridgristle's shadowmask code
// cgwg's aperture grille
//Output pixels are alternately tinted green and magenta
// Lottes mask needs linear gamma

*/

#pragma once

namespace RetroArchCrtShadersDotmaskShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,135,115,
7,195,117,151,182,171,
185,129,184,103,220,72,
3,111,1,0,0,0,
128,5,0,0,5,0,
0,0,52,0,0,0,
48,3,0,0,124,3,
0,0,212,3,0,0,
228,4,0,0,82,68,
69,70,244,2,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
203,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,8,0,
0,0,120,0,0,0,
128,0,0,0,0,0,
0,0,0,0,0,0,
184,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,204,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,240,1,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,12,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,48,2,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
12,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
68,2,0,0,96,0,
0,0,16,0,0,0,
0,0,0,0,12,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,86,2,
0,0,112,0,0,0,
4,0,0,0,0,0,
0,0,116,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,152,2,0,0,
116,0,0,0,4,0,
0,0,0,0,0,0,
116,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
168,2,0,0,120,0,
0,0,4,0,0,0,
0,0,0,0,116,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,185,2,
0,0,124,0,0,0,
4,0,0,0,0,0,
0,0,116,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
195,1,0,0,103,108,
111,98,97,108,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,2,2,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,103,108,
111,98,97,108,95,68,
79,84,77,65,83,75,
95,83,84,82,69,78,
71,84,72,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
110,2,0,0,103,108,
111,98,97,108,95,109,
97,115,107,68,97,114,
107,0,103,108,111,98,
97,108,95,109,97,115,
107,76,105,103,104,116,
0,103,108,111,98,97,
108,95,115,104,97,100,
111,119,77,97,115,107,
0,77,105,99,114,111,
115,111,102,116,32,40,
82,41,32,72,76,83,
76,32,83,104,97,100,
101,114,32,67,111,109,
112,105,108,101,114,32,
49,48,46,49,0,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,80,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,65,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
1,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
8,1,0,0,80,0,
1,0,66,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,4,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,103,0,0,4,
242,32,16,0,1,0,
0,0,1,0,0,0,
104,0,0,2,1,0,
0,0,54,0,0,5,
50,32,16,0,0,0,
0,0,70,16,16,0,
1,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,4,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,27,88,
243,229,244,141,216,24,
21,157,158,148,28,82,
219,139,1,0,0,0,
176,15,0,0,5,0,
0,0,52,0,0,0,
136,3,0,0,188,3,
0,0,240,3,0,0,
20,15,0,0,82,68,
69,70,76,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
35,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,85,
66,79,0,171,179,0,
0,0,8,0,0,0,
208,0,0,0,128,0,
0,0,0,0,0,0,
0,0,0,0,16,2,
0,0,0,0,0,0,
64,0,0,0,0,0,
0,0,36,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,72,2,0,0,
64,0,0,0,16,0,
0,0,2,0,0,0,
100,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
136,2,0,0,80,0,
0,0,16,0,0,0,
0,0,0,0,100,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,156,2,
0,0,96,0,0,0,
16,0,0,0,2,0,
0,0,100,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,174,2,0,0,
112,0,0,0,4,0,
0,0,2,0,0,0,
204,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
240,2,0,0,116,0,
0,0,4,0,0,0,
2,0,0,0,204,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,0,3,
0,0,120,0,0,0,
4,0,0,0,2,0,
0,0,204,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,17,3,0,0,
124,0,0,0,4,0,
0,0,2,0,0,0,
204,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,108,111,98,97,108,
95,77,86,80,0,102,
108,111,97,116,52,120,
52,0,2,0,3,0,
4,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,27,2,
0,0,103,108,111,98,
97,108,95,79,117,116,
112,117,116,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,90,2,0,0,
103,108,111,98,97,108,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,103,108,111,98,
97,108,95,83,111,117,
114,99,101,83,105,122,
101,0,103,108,111,98,
97,108,95,68,79,84,
77,65,83,75,95,83,
84,82,69,78,71,84,
72,0,102,108,111,97,
116,0,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,198,2,
0,0,103,108,111,98,
97,108,95,109,97,115,
107,68,97,114,107,0,
103,108,111,98,97,108,
95,109,97,115,107,76,
105,103,104,116,0,103,
108,111,98,97,108,95,
115,104,97,100,111,119,
77,97,115,107,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,28,11,
0,0,80,0,0,0,
199,2,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,8,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,7,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,0,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,24,0,0,8,
130,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,58,128,
32,0,0,0,0,0,
7,0,0,0,31,0,
4,3,58,0,16,0,
0,0,0,0,0,0,
0,9,18,0,16,0,
1,0,0,0,1,64,
0,0,0,0,128,63,
10,128,32,128,65,0,
0,0,0,0,0,0,
7,0,0,0,56,0,
0,8,34,0,16,0,
1,0,0,0,10,16,
16,0,0,0,0,0,
10,128,32,0,0,0,
0,0,6,0,0,0,
56,0,0,8,34,0,
16,0,1,0,0,0,
26,0,16,0,1,0,
0,0,10,128,32,0,
0,0,0,0,4,0,
0,0,14,0,0,8,
34,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,10,128,
32,0,0,0,0,0,
6,0,0,0,56,0,
0,7,66,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
0,63,65,0,0,5,
66,0,16,0,1,0,
0,0,42,0,16,0,
1,0,0,0,50,0,
0,10,34,0,16,0,
1,0,0,0,42,0,
16,128,65,0,0,0,
1,0,0,0,1,64,
0,0,0,0,0,64,
26,0,16,0,1,0,
0,0,65,0,0,5,
34,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,54,0,
0,7,66,0,16,0,
1,0,0,0,10,128,
32,128,65,0,0,0,
0,0,0,0,7,0,
0,0,0,0,0,8,
130,0,16,0,1,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,1,64,0,0,
0,0,128,63,50,0,
0,12,82,0,16,0,
2,0,0,0,86,5,
16,0,1,0,0,0,
166,10,16,0,1,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
0,0,0,0,128,63,
0,0,0,0,50,0,
0,9,34,0,16,0,
2,0,0,0,26,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,56,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,2,0,
0,0,54,0,0,5,
130,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,63,54,0,
0,5,242,0,16,0,
2,0,0,0,70,14,
16,0,1,0,0,0,
18,0,0,1,24,0,
0,8,130,0,16,0,
1,0,0,0,1,64,
0,0,0,0,160,64,
58,128,32,0,0,0,
0,0,7,0,0,0,
31,0,4,3,58,0,
16,0,1,0,0,0,
56,0,0,8,50,0,
16,0,3,0,0,0,
70,16,16,0,0,0,
0,0,70,128,32,0,
0,0,0,0,4,0,
0,0,56,0,0,10,
50,0,16,0,3,0,
0,0,70,0,16,0,
3,0,0,0,2,64,
0,0,219,15,73,64,
219,15,201,63,0,0,
0,0,0,0,0,0,
0,0,0,7,130,0,
16,0,1,0,0,0,
26,0,16,0,3,0,
0,0,10,0,16,0,
3,0,0,0,77,0,
0,6,18,0,16,0,
3,0,0,0,0,208,
0,0,58,0,16,0,
1,0,0,0,50,0,
0,9,18,0,16,0,
3,0,0,0,10,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
0,63,1,64,0,0,
0,0,0,63,0,0,
0,10,50,0,16,0,
4,0,0,0,246,15,
16,0,1,0,0,0,
2,64,0,0,124,10,
134,64,190,10,6,64,
0,0,0,0,0,0,
0,0,77,0,0,6,
50,0,16,0,4,0,
0,0,0,208,0,0,
70,0,16,0,4,0,
0,0,50,0,0,15,
98,0,16,0,3,0,
0,0,6,1,16,0,
4,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,63,0,0,
0,63,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,0,0,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
51,0,0,10,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,56,0,
0,7,114,0,16,0,
4,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,56,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,4,0,0,0,
18,0,0,1,47,0,
0,5,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
56,0,0,10,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,2,64,0,0,
205,204,12,64,205,204,
12,64,205,204,12,64,
0,0,0,0,25,0,
0,5,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
56,0,0,8,114,0,
16,0,3,0,0,0,
22,21,16,0,0,0,
0,0,22,133,32,0,
0,0,0,0,4,0,
0,0,50,0,0,15,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,8,0,128,63,
8,0,128,63,8,0,
128,63,0,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,63,0,0,
0,0,65,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,24,0,
0,8,130,0,16,0,
1,0,0,0,1,64,
0,0,0,0,128,63,
58,128,32,0,0,0,
0,0,7,0,0,0,
31,0,4,3,58,0,
16,0,1,0,0,0,
56,0,0,10,114,0,
16,0,4,0,0,0,
86,5,16,0,3,0,
0,0,2,64,0,0,
171,170,42,62,171,170,
170,62,171,170,170,62,
0,0,0,0,26,0,
0,5,114,0,16,0,
4,0,0,0,70,2,
16,0,4,0,0,0,
49,0,0,10,114,0,
16,0,4,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
0,0,0,63,250,126,
170,62,250,126,42,63,
0,0,0,0,1,0,
0,7,130,0,16,0,
1,0,0,0,10,0,
16,0,4,0,0,0,
1,64,0,0,0,0,
128,63,0,0,0,7,
130,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,42,0,
16,0,3,0,0,0,
56,0,0,7,130,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,26,0,
0,5,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
49,0,0,7,130,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,55,0,
0,11,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
26,128,32,0,0,0,
0,0,7,0,0,0,
42,128,32,0,0,0,
0,0,7,0,0,0,
55,0,0,11,98,0,
16,0,5,0,0,0,
166,10,16,0,4,0,
0,0,166,137,32,0,
0,0,0,0,7,0,
0,0,86,134,32,0,
0,0,0,0,7,0,
0,0,54,0,0,6,
18,0,16,0,5,0,
0,0,26,128,32,0,
0,0,0,0,7,0,
0,0,55,0,0,10,
114,0,16,0,4,0,
0,0,86,5,16,0,
4,0,0,0,102,137,
32,0,0,0,0,0,
7,0,0,0,70,2,
16,0,5,0,0,0,
56,0,0,7,114,0,
16,0,4,0,0,0,
246,15,16,0,1,0,
0,0,70,2,16,0,
4,0,0,0,18,0,
0,1,24,0,0,8,
130,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,64,58,128,
32,0,0,0,0,0,
7,0,0,0,31,0,
4,3,58,0,16,0,
1,0,0,0,56,0,
0,7,130,0,16,0,
1,0,0,0,26,0,
16,0,3,0,0,0,
1,64,0,0,171,170,
170,62,26,0,0,5,
130,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,49,0,
0,10,50,0,16,0,
5,0,0,0,246,15,
16,0,1,0,0,0,
2,64,0,0,250,126,
170,62,250,126,42,63,
0,0,0,0,0,0,
0,0,55,0,0,11,
98,0,16,0,6,0,
0,0,86,5,16,0,
5,0,0,0,166,137,
32,0,0,0,0,0,
7,0,0,0,86,134,
32,0,0,0,0,0,
7,0,0,0,54,0,
0,6,18,0,16,0,
6,0,0,0,26,128,
32,0,0,0,0,0,
7,0,0,0,55,0,
0,10,114,0,16,0,
4,0,0,0,6,0,
16,0,5,0,0,0,
102,137,32,0,0,0,
0,0,7,0,0,0,
70,2,16,0,6,0,
0,0,18,0,0,1,
56,0,0,10,194,0,
16,0,3,0,0,0,
86,9,16,0,3,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,128,63,
0,0,0,63,50,0,
0,9,130,0,16,0,
1,0,0,0,10,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
64,64,26,0,16,0,
3,0,0,0,56,0,
0,7,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
1,64,0,0,171,170,
42,62,26,0,0,5,
130,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,49,0,
0,10,50,0,16,0,
3,0,0,0,246,15,
16,0,1,0,0,0,
2,64,0,0,250,126,
170,62,250,126,42,63,
0,0,0,0,0,0,
0,0,55,0,0,11,
98,0,16,0,5,0,
0,0,86,5,16,0,
3,0,0,0,166,137,
32,0,0,0,0,0,
7,0,0,0,86,134,
32,0,0,0,0,0,
7,0,0,0,54,0,
0,6,18,0,16,0,
5,0,0,0,26,128,
32,0,0,0,0,0,
7,0,0,0,55,0,
0,10,114,0,16,0,
5,0,0,0,6,0,
16,0,3,0,0,0,
102,137,32,0,0,0,
0,0,7,0,0,0,
70,2,16,0,5,0,
0,0,24,0,0,11,
50,0,16,0,3,0,
0,0,2,64,0,0,
0,0,64,64,0,0,
128,64,0,0,0,0,
0,0,0,0,246,143,
32,0,0,0,0,0,
7,0,0,0,65,0,
0,5,194,0,16,0,
3,0,0,0,166,14,
16,0,3,0,0,0,
50,0,0,9,130,0,
16,0,1,0,0,0,
58,0,16,0,3,0,
0,0,1,64,0,0,
0,0,64,64,42,0,
16,0,3,0,0,0,
56,0,0,7,130,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,1,64,0,0,
171,170,42,62,26,0,
0,5,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
49,0,0,10,194,0,
16,0,3,0,0,0,
246,15,16,0,1,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,250,126,170,62,
250,126,42,63,55,0,
0,11,98,0,16,0,
6,0,0,0,246,15,
16,0,3,0,0,0,
166,137,32,0,0,0,
0,0,7,0,0,0,
86,134,32,0,0,0,
0,0,7,0,0,0,
54,0,0,6,18,0,
16,0,6,0,0,0,
26,128,32,0,0,0,
0,0,7,0,0,0,
55,0,0,10,114,0,
16,0,6,0,0,0,
166,10,16,0,3,0,
0,0,102,137,32,0,
0,0,0,0,7,0,
0,0,70,2,16,0,
6,0,0,0,55,0,
0,10,226,0,16,0,
3,0,0,0,86,5,
16,0,3,0,0,0,
6,9,16,0,6,0,
0,0,86,133,32,0,
0,0,0,0,7,0,
0,0,55,0,0,9,
114,0,16,0,4,0,
0,0,6,0,16,0,
3,0,0,0,70,2,
16,0,5,0,0,0,
150,7,16,0,3,0,
0,0,21,0,0,1,
21,0,0,1,56,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,4,0,
0,0,21,0,0,1,
54,0,0,8,242,0,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,21,0,0,1,
47,0,0,5,114,0,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,56,0,0,10,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,2,64,
0,0,47,186,232,62,
47,186,232,62,47,186,
232,62,0,0,0,0,
25,0,0,5,114,0,
16,0,1,0,0,0,
70,2,16,0,0,0,
0,0,54,0,0,5,
130,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,63,55,0,
0,9,242,32,16,0,
0,0,0,0,246,15,
16,0,0,0,0,0,
70,14,16,0,2,0,
0,0,70,14,16,0,
1,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,96,0,
0,0,7,0,0,0,
0,0,0,0,2,0,
0,0,60,0,0,0,
0,0,0,0,1,0,
0,0,5,0,0,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,9,0,0,0,
12,0,0,0,9,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class CrtShadersDotmaskShaderDef : public ShaderDef
{
public:
	CrtShadersDotmaskShaderDef() : ShaderDef{}
	{
		Name = "dotmask";
		VertexByteCode = RetroArchCrtShadersDotmaskShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersDotmaskShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersDotmaskShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersDotmaskShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("DOTMASK_STRENGTH", 0, 112, 4, 0.000000f, 1.000000f, 0.300000f, 0.010000f, "CGWG Dot Mask Strength"));
		Params.push_back(ShaderParam("maskDark", 0, 116, 4, 0.000000f, 2.000000f, 0.500000f, 0.100000f, "Lottes maskDark"));
		Params.push_back(ShaderParam("maskLight", 0, 120, 4, 0.000000f, 2.000000f, 1.500000f, 0.100000f, "Lottes maskLight"));
		Params.push_back(ShaderParam("shadowMask", 0, 124, 4, 0.000000f, 5.000000f, 3.000000f, 1.000000f, "Mask Style"));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
