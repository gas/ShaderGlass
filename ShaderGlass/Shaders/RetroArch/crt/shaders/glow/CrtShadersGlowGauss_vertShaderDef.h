/*
ShaderGlass shader crt-shaders-glow\gauss_vert imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/crt/shaders/glow/gauss_vert.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

*/

#pragma once

namespace RetroArchCrtShadersGlowGauss_vertShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,43,185,
191,10,28,6,114,61,
102,153,187,229,50,124,
34,63,1,0,0,0,
0,5,0,0,5,0,
0,0,52,0,0,0,
28,2,0,0,104,2,
0,0,240,2,0,0,
100,4,0,0,82,68,
69,70,224,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
182,1,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,4,0,
0,0,120,0,0,0,
112,0,0,0,0,0,
0,0,0,0,0,0,
24,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,44,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,1,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,108,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,144,1,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
108,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
164,1,0,0,96,0,
0,0,16,0,0,0,
2,0,0,0,108,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,35,1,0,0,
103,108,111,98,97,108,
95,79,117,116,112,117,
116,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
98,1,0,0,103,108,
111,98,97,108,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
103,108,111,98,97,108,
95,83,111,117,114,99,
101,83,105,122,101,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,171,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,128,0,0,0,
4,0,0,0,8,0,
0,0,104,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,104,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,3,
0,0,104,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,1,14,
0,0,113,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
2,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
108,1,0,0,80,0,
1,0,91,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,7,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,101,0,0,3,
194,32,16,0,0,0,
0,0,101,0,0,3,
18,32,16,0,1,0,
0,0,103,0,0,4,
242,32,16,0,2,0,
0,0,1,0,0,0,
104,0,0,2,1,0,
0,0,50,0,0,13,
194,32,16,0,0,0,
0,0,6,20,16,0,
1,0,0,0,6,132,
32,0,0,0,0,0,
6,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,128,0,0,0,191,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,54,0,0,6,
18,32,16,0,1,0,
0,0,58,128,32,0,
0,0,0,0,6,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,2,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,8,0,
0,0,1,0,0,0,
0,0,0,0,6,0,
0,0,5,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,139,18,
81,178,73,251,61,114,
119,240,196,145,221,130,
52,227,1,0,0,0,
120,10,0,0,5,0,
0,0,52,0,0,0,
16,3,0,0,116,3,
0,0,168,3,0,0,
220,9,0,0,82,68,
69,70,212,2,0,0,
2,0,0,0,220,0,
0,0,4,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
172,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
188,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,204,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,211,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
215,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,95,83,111,117,
114,99,101,95,115,97,
109,112,108,101,114,0,
83,111,117,114,99,101,
0,85,66,79,0,80,
117,115,104,0,211,0,
0,0,4,0,0,0,
12,1,0,0,112,0,
0,0,0,0,0,0,
0,0,0,0,215,0,
0,0,1,0,0,0,
76,2,0,0,16,0,
0,0,0,0,0,0,
0,0,0,0,172,1,
0,0,0,0,0,0,
64,0,0,0,0,0,
0,0,192,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,228,1,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
0,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
36,2,0,0,80,0,
0,0,16,0,0,0,
0,0,0,0,0,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,56,2,
0,0,96,0,0,0,
16,0,0,0,2,0,
0,0,0,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
183,1,0,0,103,108,
111,98,97,108,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,246,1,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,171,171,
116,2,0,0,0,0,
0,0,4,0,0,0,
2,0,0,0,136,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,66,
79,79,83,84,0,102,
108,111,97,116,0,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,129,2,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,92,0,0,0,
3,0,0,0,8,0,
0,0,80,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,0,
0,0,80,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,12,
0,0,80,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,1,1,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,44,6,
0,0,80,0,0,0,
139,1,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,7,0,0,0,
89,0,0,4,70,142,
32,0,1,0,0,0,
1,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
194,16,16,0,0,0,
0,0,98,16,0,3,
18,16,16,0,1,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
4,0,0,0,54,0,
0,5,18,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,0,
54,0,0,5,34,0,
16,0,0,0,0,0,
10,16,16,0,1,0,
0,0,65,0,0,5,
194,0,16,0,0,0,
0,0,166,30,16,0,
0,0,0,0,0,0,
0,10,50,0,16,0,
1,0,0,0,230,10,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,0,0,0,
0,0,0,0,0,8,
66,0,16,0,0,0,
0,0,58,0,16,128,
65,0,0,0,0,0,
0,0,58,16,16,0,
0,0,0,0,50,0,
0,10,50,0,16,0,
0,0,0,0,70,0,
16,0,1,0,0,0,
230,138,32,0,0,0,
0,0,6,0,0,0,
70,0,16,0,0,0,
0,0,56,0,0,8,
50,0,16,0,1,0,
0,0,70,0,16,0,
1,0,0,0,230,138,
32,0,0,0,0,0,
6,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,1,0,0,0,
70,0,16,0,1,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
178,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,70,123,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,56,0,0,7,
114,0,16,0,2,0,
0,0,70,3,16,0,
0,0,0,0,70,3,
16,0,0,0,0,0,
0,0,0,7,178,0,
16,0,0,0,0,0,
70,12,16,0,0,0,
0,0,70,12,16,0,
0,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,15,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,0,0,0,64,
0,0,0,64,0,0,
0,64,0,0,0,0,
2,64,0,0,0,0,
0,64,0,0,0,64,
0,0,0,64,0,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,63,0,0,0,0,
68,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,0,0,0,8,
130,0,16,0,1,0,
0,0,42,0,16,128,
65,0,0,0,0,0,
0,0,1,64,0,0,
0,0,128,63,56,0,
0,8,66,0,16,0,
0,0,0,0,42,0,
16,128,129,0,0,0,
0,0,0,0,1,64,
0,0,85,85,85,64,
56,0,0,8,130,0,
16,0,1,0,0,0,
58,0,16,128,129,0,
0,0,1,0,0,0,
1,64,0,0,85,85,
85,64,56,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,246,15,
16,0,1,0,0,0,
47,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,0,3,0,0,0,
50,0,0,15,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
205,204,76,62,205,204,
76,62,205,204,76,62,
0,0,0,0,2,64,
0,0,154,153,25,63,
154,153,25,63,154,153,
25,63,0,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,59,170,184,191,
59,170,184,191,59,170,
184,191,0,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,7,
178,0,16,0,0,0,
0,0,70,12,16,0,
0,0,0,0,70,8,
16,0,3,0,0,0,
14,0,0,7,178,0,
16,0,0,0,0,0,
70,12,16,0,0,0,
0,0,70,8,16,0,
2,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,7,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,50,0,
0,15,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,64,0,0,0,64,
0,0,0,64,0,0,
0,0,2,64,0,0,
0,0,0,64,0,0,
0,64,0,0,0,64,
0,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,63,0,0,
0,0,68,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,7,114,0,16,0,
3,0,0,0,166,10,
16,0,0,0,0,0,
70,2,16,0,3,0,
0,0,47,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,7,114,0,16,0,
3,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,3,0,
0,0,50,0,0,15,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,205,204,76,62,
205,204,76,62,205,204,
76,62,0,0,0,0,
2,64,0,0,154,153,
25,63,154,153,25,63,
154,153,25,63,0,0,
0,0,25,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,59,170,
184,191,59,170,184,191,
59,170,184,191,0,0,
0,0,25,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,0,3,0,
0,0,14,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
0,0,0,7,114,0,
16,0,0,0,0,0,
70,3,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,56,0,
0,8,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
6,128,32,0,1,0,
0,0,0,0,0,0,
56,0,0,10,114,32,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,2,64,0,0,
211,155,94,63,211,155,
94,63,211,155,94,63,
0,0,0,0,54,0,
0,5,130,32,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
62,0,0,1,83,84,
65,84,148,0,0,0,
47,0,0,0,4,0,
0,0,0,0,0,0,
3,0,0,0,41,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class CrtShadersGlowGauss_vertShaderDef : public ShaderDef
{
public:
	CrtShadersGlowGauss_vertShaderDef() : ShaderDef{}
	{
		Name = "gauss_vert";
		VertexByteCode = RetroArchCrtShadersGlowGauss_vertShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersGlowGauss_vertShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersGlowGauss_vertShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersGlowGauss_vertShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("BOOST", -1, 0, 4, 0.500000f, 1.500000f, 1.000000f));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
