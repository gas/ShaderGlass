/*
ShaderGlass shader crt-shaders-glow\lanczos_horiz imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/crt/shaders/glow/lanczos_horiz.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

*/

#pragma once

namespace RetroArchCrtShadersGlowLanczos_horizShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,112,156,
30,236,239,69,56,144,
65,168,182,29,134,183,
232,59,1,0,0,0,
236,4,0,0,5,0,
0,0,52,0,0,0,
28,2,0,0,104,2,
0,0,240,2,0,0,
80,4,0,0,82,68,
69,70,224,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
182,1,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,4,0,
0,0,120,0,0,0,
112,0,0,0,0,0,
0,0,0,0,0,0,
24,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,44,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,1,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,108,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,144,1,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
108,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
164,1,0,0,96,0,
0,0,16,0,0,0,
2,0,0,0,108,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,35,1,0,0,
103,108,111,98,97,108,
95,79,117,116,112,117,
116,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
98,1,0,0,103,108,
111,98,97,108,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
103,108,111,98,97,108,
95,83,111,117,114,99,
101,83,105,122,101,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,171,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,128,0,0,0,
4,0,0,0,8,0,
0,0,104,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,104,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,4,11,
0,0,104,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,8,7,
0,0,113,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
1,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
88,1,0,0,80,0,
1,0,86,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,7,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,101,0,0,3,
66,32,16,0,0,0,
0,0,101,0,0,3,
130,32,16,0,0,0,
0,0,103,0,0,4,
242,32,16,0,1,0,
0,0,1,0,0,0,
104,0,0,2,1,0,
0,0,56,0,0,8,
66,32,16,0,0,0,
0,0,10,16,16,0,
1,0,0,0,10,128,
32,0,0,0,0,0,
6,0,0,0,54,0,
0,5,50,32,16,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
54,0,0,6,130,32,
16,0,0,0,0,0,
42,128,32,0,0,0,
0,0,6,0,0,0,
56,0,0,8,242,0,
16,0,0,0,0,0,
86,21,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,1,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,6,16,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
166,26,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,2,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,32,16,0,
1,0,0,0,246,31,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,3,0,0,0,
70,14,16,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,8,0,0,0,
1,0,0,0,0,0,
0,0,6,0,0,0,
5,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
2,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,100,114,
111,247,242,145,25,45,
63,99,203,206,188,248,
193,101,1,0,0,0,
72,7,0,0,5,0,
0,0,52,0,0,0,
116,2,0,0,216,2,
0,0,12,3,0,0,
172,6,0,0,82,68,
69,70,56,2,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
14,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,85,
66,79,0,171,179,0,
0,0,4,0,0,0,
208,0,0,0,112,0,
0,0,0,0,0,0,
0,0,0,0,112,1,
0,0,0,0,0,0,
64,0,0,0,0,0,
0,0,132,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,168,1,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
196,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
232,1,0,0,80,0,
0,0,16,0,0,0,
0,0,0,0,196,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,252,1,
0,0,96,0,0,0,
16,0,0,0,2,0,
0,0,196,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
123,1,0,0,103,108,
111,98,97,108,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,186,1,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,171,171,73,83,
71,78,92,0,0,0,
3,0,0,0,8,0,
0,0,80,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,2,
0,0,80,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,4,4,
0,0,80,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,8,8,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,152,3,
0,0,80,0,0,0,
230,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,7,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,34,16,16,0,
0,0,0,0,98,16,
0,3,66,16,16,0,
0,0,0,0,98,16,
0,3,130,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,5,0,0,0,
65,0,0,5,18,0,
16,0,0,0,0,0,
42,16,16,0,0,0,
0,0,0,0,0,8,
34,0,16,0,0,0,
0,0,10,0,16,128,
65,0,0,0,0,0,
0,0,42,16,16,0,
0,0,0,0,0,0,
0,10,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,191,
0,0,0,0,0,0,
0,0,56,0,0,8,
18,0,16,0,1,0,
0,0,10,0,16,0,
0,0,0,0,42,128,
32,0,0,0,0,0,
6,0,0,0,54,0,
0,5,34,0,16,0,
1,0,0,0,26,16,
16,0,0,0,0,0,
54,0,0,5,34,0,
16,0,2,0,0,0,
1,64,0,0,0,0,
0,0,54,0,0,8,
242,0,16,0,3,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
254,255,255,255,48,0,
0,1,34,0,0,7,
18,0,16,0,0,0,
0,0,1,64,0,0,
2,0,0,0,58,0,
16,0,3,0,0,0,
3,0,4,3,10,0,
16,0,0,0,0,0,
43,0,0,5,18,0,
16,0,0,0,0,0,
58,0,16,0,3,0,
0,0,0,0,0,8,
66,0,16,0,0,0,
0,0,10,0,16,128,
65,0,0,0,0,0,
0,0,26,0,16,0,
0,0,0,0,49,0,
0,8,130,0,16,0,
0,0,0,0,42,0,
16,128,129,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,64,
31,0,4,3,58,0,
16,0,0,0,0,0,
29,0,0,8,130,0,
16,0,0,0,0,0,
42,0,16,128,129,0,
0,0,0,0,0,0,
1,64,0,0,111,18,
131,58,56,0,0,10,
114,0,16,0,4,0,
0,0,166,10,16,0,
0,0,0,0,2,64,
0,0,219,15,73,64,
0,0,0,63,219,15,
201,63,0,0,0,0,
77,0,0,6,194,0,
16,0,1,0,0,0,
0,208,0,0,6,8,
16,0,4,0,0,0,
14,0,0,7,194,0,
16,0,1,0,0,0,
166,14,16,0,1,0,
0,0,6,8,16,0,
4,0,0,0,55,0,
0,9,66,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,63,29,0,
0,8,130,0,16,0,
0,0,0,0,26,0,
16,128,129,0,0,0,
4,0,0,0,1,64,
0,0,111,18,131,58,
55,0,0,9,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,58,0,16,0,
1,0,0,0,1,64,
0,0,0,0,128,63,
56,0,0,7,66,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,56,0,
0,7,18,0,16,0,
2,0,0,0,10,0,
16,0,0,0,0,0,
58,16,16,0,0,0,
0,0,0,0,0,7,
146,0,16,0,0,0,
0,0,6,4,16,0,
1,0,0,0,6,4,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
210,0,16,0,2,0,
0,0,198,0,16,0,
0,0,0,0,198,121,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,50,0,0,9,
114,0,16,0,3,0,
0,0,134,3,16,0,
2,0,0,0,166,10,
16,0,0,0,0,0,
70,2,16,0,3,0,
0,0,21,0,0,1,
30,0,0,7,130,0,
16,0,3,0,0,0,
58,0,16,0,3,0,
0,0,1,64,0,0,
1,0,0,0,22,0,
0,1,54,0,0,5,
114,32,16,0,0,0,
0,0,70,2,16,0,
3,0,0,0,54,0,
0,5,130,32,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
62,0,0,1,83,84,
65,84,148,0,0,0,
32,0,0,0,5,0,
0,0,0,0,0,0,
4,0,0,0,15,0,
0,0,2,0,0,0,
0,0,0,0,1,0,
0,0,2,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,5,0,
0,0,2,0,0,0,
2,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class CrtShadersGlowLanczos_horizShaderDef : public ShaderDef
{
public:
	CrtShadersGlowLanczos_horizShaderDef() : ShaderDef{}
	{
		Name = "lanczos_horiz";
		VertexByteCode = RetroArchCrtShadersGlowLanczos_horizShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersGlowLanczos_horizShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersGlowLanczos_horizShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersGlowLanczos_horizShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
