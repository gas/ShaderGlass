/*
ShaderGlass shader crt-shaders\crt-cgwg-fast imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/crt/shaders/crt-cgwg-fast.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


cgwg's CRT shader

Copyright (C) 2010-2011 cgwg, Themaister

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.

(cgwg gave their consent to have their code distributed under the GPL in
this message:

http://board.byuu.org/viewtopic.php?p=26075#p26075

Feel free to distribute my shaders under the GPL. After all, the
barrel distortion code was taken from the Curvature shader, which is
under the GPL.
)

 TODO/FIXME - Wrap all these in a struct-like type so we can address
them in a struct-like way i.e. coords.c01 

*/

#pragma once

namespace RetroArchCrtShadersCrtCgwgFastShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,239,180,
206,189,11,20,201,105,
44,170,141,107,0,21,
144,187,1,0,0,0,
228,7,0,0,5,0,
0,0,52,0,0,0,
128,2,0,0,204,2,
0,0,20,4,0,0,
72,7,0,0,82,68,
69,70,68,2,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
28,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,5,0,
0,0,120,0,0,0,
128,0,0,0,0,0,
0,0,0,0,0,0,
64,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,84,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,120,1,
0,0,64,0,0,0,
16,0,0,0,2,0,
0,0,148,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,184,1,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
148,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
204,1,0,0,96,0,
0,0,16,0,0,0,
2,0,0,0,148,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,222,1,
0,0,112,0,0,0,
4,0,0,0,0,0,
0,0,248,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
75,1,0,0,103,108,
111,98,97,108,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,138,1,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,103,108,
111,98,97,108,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,240,1,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
64,1,0,0,12,0,
0,0,8,0,0,0,
40,1,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
40,1,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,3,0,0,
40,1,0,0,2,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,12,0,0,
40,1,0,0,3,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,12,3,0,0,
40,1,0,0,4,0,
0,0,0,0,0,0,
3,0,0,0,2,0,
0,0,3,12,0,0,
40,1,0,0,5,0,
0,0,0,0,0,0,
3,0,0,0,2,0,
0,0,12,3,0,0,
40,1,0,0,6,0,
0,0,0,0,0,0,
3,0,0,0,3,0,
0,0,3,12,0,0,
40,1,0,0,7,0,
0,0,0,0,0,0,
3,0,0,0,3,0,
0,0,12,3,0,0,
40,1,0,0,8,0,
0,0,0,0,0,0,
3,0,0,0,4,0,
0,0,3,12,0,0,
40,1,0,0,9,0,
0,0,0,0,0,0,
3,0,0,0,4,0,
0,0,4,11,0,0,
40,1,0,0,10,0,
0,0,0,0,0,0,
3,0,0,0,5,0,
0,0,3,12,0,0,
49,1,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,6,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,44,3,
0,0,80,0,1,0,
203,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,7,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
101,0,0,3,194,32,
16,0,0,0,0,0,
101,0,0,3,50,32,
16,0,1,0,0,0,
101,0,0,3,194,32,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,2,0,0,0,
101,0,0,3,194,32,
16,0,2,0,0,0,
101,0,0,3,50,32,
16,0,3,0,0,0,
101,0,0,3,194,32,
16,0,3,0,0,0,
101,0,0,3,50,32,
16,0,4,0,0,0,
101,0,0,3,66,32,
16,0,4,0,0,0,
101,0,0,3,50,32,
16,0,5,0,0,0,
103,0,0,4,242,32,
16,0,6,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
0,0,0,9,66,32,
16,0,0,0,0,0,
10,16,16,0,1,0,
0,0,42,128,32,128,
65,0,0,0,0,0,
0,0,6,0,0,0,
54,0,0,5,178,32,
16,0,0,0,0,0,
70,20,16,0,1,0,
0,0,54,0,0,6,
146,0,16,0,0,0,
0,0,166,142,32,0,
0,0,0,0,6,0,
0,0,0,0,0,7,
66,32,16,0,1,0,
0,0,10,0,16,0,
0,0,0,0,10,16,
16,0,1,0,0,0,
54,0,0,5,178,32,
16,0,1,0,0,0,
70,20,16,0,1,0,
0,0,56,0,0,8,
18,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,64,42,128,
32,0,0,0,0,0,
6,0,0,0,54,0,
0,8,98,0,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,7,50,32,
16,0,2,0,0,0,
70,0,16,0,0,0,
0,0,70,16,16,0,
1,0,0,0,50,0,
0,13,194,32,16,0,
2,0,0,0,166,142,
32,0,0,0,0,0,
6,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
128,191,0,0,128,63,
6,20,16,0,1,0,
0,0,0,0,0,7,
50,32,16,0,3,0,
0,0,230,10,16,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
0,0,0,8,194,32,
16,0,3,0,0,0,
6,20,16,0,1,0,
0,0,166,142,32,0,
0,0,0,0,6,0,
0,0,50,0,0,13,
50,32,16,0,4,0,
0,0,230,138,32,0,
0,0,0,0,6,0,
0,0,2,64,0,0,
0,0,0,64,0,0,
128,63,0,0,0,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
56,0,0,8,66,32,
16,0,4,0,0,0,
10,16,16,0,1,0,
0,0,10,128,32,0,
0,0,0,0,4,0,
0,0,56,0,0,8,
50,32,16,0,5,0,
0,0,70,16,16,0,
1,0,0,0,70,128,
32,0,0,0,0,0,
6,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,6,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
19,0,0,0,1,0,
0,0,0,0,0,0,
14,0,0,0,14,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,218,17,
227,167,128,48,131,106,
226,216,66,217,245,91,
107,97,1,0,0,0,
188,13,0,0,5,0,
0,0,52,0,0,0,
156,1,0,0,192,2,
0,0,244,2,0,0,
32,13,0,0,82,68,
69,70,96,1,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
56,1,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,1,0,0,0,
208,0,0,0,16,0,
0,0,0,0,0,0,
0,0,0,0,248,0,
0,0,0,0,0,0,
4,0,0,0,2,0,
0,0,20,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,95,67,82,84,67,
71,87,71,95,71,65,
77,77,65,0,102,108,
111,97,116,0,171,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,12,1,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,28,1,0,0,
11,0,0,0,8,0,
0,0,16,1,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,0,
0,0,16,1,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,12,
0,0,16,1,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,16,1,0,0,
3,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,12,12,
0,0,16,1,0,0,
4,0,0,0,0,0,
0,0,3,0,0,0,
2,0,0,0,3,3,
0,0,16,1,0,0,
5,0,0,0,0,0,
0,0,3,0,0,0,
2,0,0,0,12,12,
0,0,16,1,0,0,
6,0,0,0,0,0,
0,0,3,0,0,0,
3,0,0,0,3,3,
0,0,16,1,0,0,
7,0,0,0,0,0,
0,0,3,0,0,0,
3,0,0,0,12,12,
0,0,16,1,0,0,
8,0,0,0,0,0,
0,0,3,0,0,0,
4,0,0,0,3,3,
0,0,16,1,0,0,
9,0,0,0,0,0,
0,0,3,0,0,0,
4,0,0,0,4,4,
0,0,16,1,0,0,
10,0,0,0,0,0,
0,0,3,0,0,0,
5,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,36,10,
0,0,80,0,0,0,
137,2,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,1,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,194,16,16,0,
0,0,0,0,98,16,
0,3,50,16,16,0,
1,0,0,0,98,16,
0,3,194,16,16,0,
1,0,0,0,98,16,
0,3,50,16,16,0,
2,0,0,0,98,16,
0,3,194,16,16,0,
2,0,0,0,98,16,
0,3,50,16,16,0,
3,0,0,0,98,16,
0,3,194,16,16,0,
3,0,0,0,98,16,
0,3,50,16,16,0,
4,0,0,0,98,16,
0,3,66,16,16,0,
4,0,0,0,98,16,
0,3,50,16,16,0,
5,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,7,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,0,0,
0,0,230,26,16,0,
3,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
1,0,0,0,230,26,
16,0,2,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,2,0,0,0,
70,16,16,0,3,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
26,0,0,5,50,0,
16,0,3,0,0,0,
70,16,16,0,5,0,
0,0,54,0,0,6,
66,0,16,0,3,0,
0,0,10,0,16,128,
65,0,0,0,3,0,
0,0,0,0,0,10,
242,0,16,0,4,0,
0,0,6,10,16,0,
3,0,0,0,2,64,
0,0,215,163,128,63,
10,215,163,59,215,163,
128,63,236,81,0,64,
56,0,0,10,242,0,
16,0,5,0,0,0,
70,14,16,0,4,0,
0,0,2,64,0,0,
219,15,73,64,219,15,
73,64,219,15,73,64,
219,15,73,64,77,0,
0,6,242,0,16,0,
5,0,0,0,0,208,
0,0,70,14,16,0,
5,0,0,0,56,0,
0,10,242,0,16,0,
6,0,0,0,70,14,
16,0,4,0,0,0,
2,64,0,0,219,15,
201,63,219,15,201,63,
219,15,201,63,219,15,
201,63,56,0,0,7,
242,0,16,0,4,0,
0,0,70,14,16,0,
4,0,0,0,70,14,
16,0,4,0,0,0,
77,0,0,6,242,0,
16,0,6,0,0,0,
0,208,0,0,70,14,
16,0,6,0,0,0,
56,0,0,7,242,0,
16,0,5,0,0,0,
70,14,16,0,5,0,
0,0,70,14,16,0,
6,0,0,0,14,0,
0,7,242,0,16,0,
4,0,0,0,70,14,
16,0,5,0,0,0,
70,14,16,0,4,0,
0,0,17,0,0,10,
130,0,16,0,0,0,
0,0,70,14,16,0,
4,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,128,63,
14,0,0,7,242,0,
16,0,4,0,0,0,
70,14,16,0,4,0,
0,0,246,15,16,0,
0,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
86,5,16,0,4,0,
0,0,50,0,0,9,
114,0,16,0,1,0,
0,0,6,0,16,0,
4,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,9,
114,0,16,0,0,0,
0,0,166,10,16,0,
4,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
1,0,0,0,70,16,
16,0,4,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,50,32,
0,9,114,0,16,0,
0,0,0,0,246,15,
16,0,4,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
0,0,0,0,56,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,47,0,0,5,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,56,0,
0,8,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
6,128,32,0,1,0,
0,0,0,0,0,0,
25,0,0,5,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,56,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
50,0,0,15,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,2,64,0,0,
0,0,0,64,0,0,
0,64,0,0,0,64,
0,0,0,0,2,64,
0,0,0,0,0,64,
0,0,0,64,0,0,
0,64,0,0,0,0,
56,0,0,10,114,0,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,63,
0,0,0,0,68,0,
0,5,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
50,0,0,9,130,0,
16,0,0,0,0,0,
26,0,16,0,3,0,
0,0,1,64,0,0,
184,30,85,192,1,64,
0,0,184,30,85,64,
56,0,0,7,130,0,
16,0,1,0,0,0,
26,0,16,0,3,0,
0,0,1,64,0,0,
184,30,85,64,56,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
246,15,16,0,0,0,
0,0,47,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,15,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,2,64,
0,0,2,43,7,62,
2,43,7,62,2,43,
7,62,0,0,0,0,
2,64,0,0,57,180,
200,62,57,180,200,62,
57,180,200,62,0,0,
0,0,25,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,56,0,
0,10,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,59,170,
184,191,59,170,184,191,
59,170,184,191,0,0,
0,0,25,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,14,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,56,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,1,0,
0,0,70,16,16,0,
1,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,56,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,86,5,
16,0,4,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,230,26,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,50,0,0,9,
114,0,16,0,1,0,
0,0,6,0,16,0,
4,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
2,0,0,0,230,26,
16,0,1,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,50,0,
0,9,114,0,16,0,
1,0,0,0,166,10,
16,0,4,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,2,0,0,0,
70,16,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
50,32,0,9,114,0,
16,0,1,0,0,0,
246,15,16,0,4,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,7,114,0,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,47,0,
0,5,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,8,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,6,128,32,0,
1,0,0,0,0,0,
0,0,25,0,0,5,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,15,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,0,0,0,64,
0,0,0,64,0,0,
0,64,0,0,0,0,
2,64,0,0,0,0,
0,64,0,0,0,64,
0,0,0,64,0,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,63,0,0,0,0,
68,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,7,
114,0,16,0,3,0,
0,0,246,15,16,0,
1,0,0,0,70,2,
16,0,3,0,0,0,
47,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,0,3,0,0,0,
50,0,0,15,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
2,43,7,62,2,43,
7,62,2,43,7,62,
0,0,0,0,2,64,
0,0,57,180,200,62,
57,180,200,62,57,180,
200,62,0,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,59,170,184,191,
59,170,184,191,59,170,
184,191,0,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,14,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,2,0,0,0,
50,0,0,9,114,0,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,0,0,0,0,0,
56,0,0,7,130,0,
16,0,0,0,0,0,
42,16,16,0,4,0,
0,0,1,64,0,0,
0,0,0,63,65,0,
0,5,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
50,0,0,10,130,0,
16,0,0,0,0,0,
58,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
0,64,42,16,16,0,
4,0,0,0,65,0,
0,5,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
50,0,0,15,114,0,
16,0,1,0,0,0,
246,15,16,0,0,0,
0,0,2,64,0,0,
154,153,153,190,154,153,
153,62,154,153,153,190,
0,0,0,0,2,64,
0,0,0,0,128,63,
51,51,51,63,0,0,
128,63,0,0,0,0,
56,0,0,7,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,47,0,
0,5,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
56,0,0,10,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,2,64,0,0,
31,186,232,62,31,186,
232,62,31,186,232,62,
0,0,0,0,25,0,
0,5,114,32,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,62,0,0,1,
83,84,65,84,148,0,
0,0,75,0,0,0,
7,0,0,0,0,0,
0,0,11,0,0,0,
65,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,8,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};

}

namespace RetroArch
{
class CrtShadersCrtCgwgFastShaderDef : public ShaderDef
{
public:
	CrtShadersCrtCgwgFastShaderDef() : ShaderDef{}
	{
		Name = "crt-cgwg-fast";
		VertexByteCode = RetroArchCrtShadersCrtCgwgFastShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersCrtCgwgFastShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersCrtCgwgFastShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersCrtCgwgFastShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("CRTCGWG_GAMMA", -1, 0, 4, 0.000000f, 10.000000f, 2.700000f));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("FrameCount", 0, 112, 4, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
