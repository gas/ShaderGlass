/*
ShaderGlass shader crt-shaders-crt-interlaced-halation\crt-interlaced-halation-pass2 imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/crt/shaders/crt-interlaced-halation/crt-interlaced-halation-pass2.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


CRT-interlaced-halation shader - pass2

Like the CRT-interlaced shader, but adds a subtle glow around bright areas
of the screen.

Copyright (C) 2010-2012 cgwg, Themaister and DOLLS

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.

(cgwg gave their consent to have the original version of this shader
distributed under the GPL in this message:

http://board.byuu.org/viewtopic.php?p=26075#p26075

Feel free to distribute my shaders under the GPL. After all, the
barrel distortion code was taken from the Curvature shader, which is
under the GPL.
)

 Comment the next line to disable interpolation in linear gamma (and
 gain speed).
 Enable screen curvature.
 Enable 3x oversampling of the beam profile
#define OVERSAMPLE
 Use the older, purely gaussian beam profile
 Use interlacing detection; may interfere with other shaders if combined
 Enable Dot-mask emulation:
 Output pixels are alternately tinted green and magenta.
#define DOTMASK
Enable if using several shaders.
Disabling it reduces moire for single pass.
 Macros.
 START of parameters
 gamma of simulated CRT
 gamma of display monitor (typically 2.2 is correct)
 overscan (e.g. 1.02 for 2% overscan)
 aspect ratio
 lengths are measured in units of (approximately) the width
 of the monitor simulated distance from viewer to monitor
 radius of curvature
 tilt angle in radians
 (behavior might be a bit wrong if both components are
 nonzero)
 size of curved corners
 border smoothness parameter
 decrease if borders are too aliased
 END of parameters
 Calculate the influence of a scanline on the current pixel.

 'distance' is the distance in texture coordinates from the current
 pixel to the scanline in question.
 'color' is the colour of the scanline at the horizontal location of
 the current pixel.
 "wid" controls the width of the scanline beam, for each RGB
 channel The "weights" lines basically specify the formula
 that gives you the profile of the beam, i.e. the intensity as
 a function of distance from the vertical center of the
 scanline. In this case, it is gaussian if width=2, and
 becomes nongaussian for larger widths. Ideally this should
 be normalized so that the integral across the beam is
 independent of its width. That is, for a narrower beam
 "weights" should have a higher peak at the center of the
 scanline than for a wider beam.
 Precalculate a bunch of useful values we'll need in the fragment
 shader.
 The size of one texel, in texture-coordinates.
 Resulting X pixel-coordinate of the pixel we're drawing.
 Here's a helpful diagram to keep in mind while trying to
 understand the code:

  |      |      |      |      |
 -------------------------------
  |      |      |      |      |
  |  01  |  11  |  21  |  31  | <-- current scanline
  |      | @    |      |      |
 -------------------------------
  |      |      |      |      |
  |  02  |  12  |  22  |  32  | <-- next scanline
  |      |      |      |      |
 -------------------------------
  |      |      |      |      |

 Each character-cell represents a pixel on the output
 surface, "@" represents the current pixel (always somewhere
 in the bottom half of the current scan-line, or the top-half
 of the next scanline). The grid of lines represents the
 edges of the texels of the underlying texture.
 Texture coordinates of the texel containing the active pixel.
cd *= ORIG.texture_size / ORIG.video_size;
cd2 *= ORIG.texture_size / ORIG.video_size;
 Of all the pixels that are mapped onto the texel we are
 currently rendering, which pixel are we currently rendering?
float filter = fwidth(ratio_scale.y);
 Snap to the center of the underlying texel.
 Calculate Lanczos scaling coefficients describing the effect
 of various neighbour texels in a scanline on the current
 pixel.
 Prevent division by zero.
 Lanczos2 kernel.
 Normalize.
 Calculate the effective colour of the current and next
 scanlines at the horizontal location of the current pixel,
 using the Lanczos coefficients above.
 Calculate the influence of the current and next scanlines on
 the current pixel.
 dot-mask emulation:
 Output pixels are alternately tinted green and magenta.
 Convert the image gamma for display on our output device.
 Color the texel.

*/

#pragma once

namespace RetroArchCrtShadersCrtInterlacedHalationCrtInterlacedHalationPass2ShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,46,57,
209,114,152,39,226,47,
223,81,194,176,174,156,
110,27,1,0,0,0,
76,7,0,0,5,0,
0,0,52,0,0,0,
192,2,0,0,12,3,
0,0,244,3,0,0,
176,6,0,0,82,68,
69,70,132,2,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
92,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,4,0,0,0,
24,1,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,184,1,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,212,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,248,1,0,0,
16,0,0,0,16,0,
0,0,2,0,0,0,
212,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
12,2,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,212,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,30,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,56,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,202,1,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
48,2,0,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,73,83,71,78,
68,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,15,0,0,
56,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,224,0,
0,0,8,0,0,0,
8,0,0,0,200,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,12,0,0,200,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
12,3,0,0,200,0,
0,0,2,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
1,14,0,0,200,0,
0,0,3,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
6,9,0,0,200,0,
0,0,4,0,0,0,
0,0,0,0,3,0,
0,0,2,0,0,0,
7,8,0,0,200,0,
0,0,5,0,0,0,
0,0,0,0,3,0,
0,0,3,0,0,0,
3,12,0,0,200,0,
0,0,6,0,0,0,
0,0,0,0,3,0,
0,0,3,0,0,0,
12,3,0,0,209,0,
0,0,0,0,0,0,
1,0,0,0,3,0,
0,0,4,0,0,0,
15,0,0,0,84,69,
88,67,79,79,82,68,
0,83,86,95,80,111,
115,105,116,105,111,110,
0,171,171,171,83,72,
69,88,180,2,0,0,
80,0,1,0,173,0,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,0,0,0,0,
4,0,0,0,89,0,
0,4,70,142,32,0,
1,0,0,0,3,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,101,0,0,3,
194,32,16,0,0,0,
0,0,101,0,0,3,
18,32,16,0,1,0,
0,0,101,0,0,3,
98,32,16,0,1,0,
0,0,101,0,0,3,
114,32,16,0,2,0,
0,0,101,0,0,3,
50,32,16,0,3,0,
0,0,101,0,0,3,
194,32,16,0,3,0,
0,0,103,0,0,4,
242,32,16,0,4,0,
0,0,1,0,0,0,
104,0,0,2,1,0,
0,0,56,0,0,8,
18,0,16,0,0,0,
0,0,1,64,0,0,
10,215,163,59,26,128,
32,0,1,0,0,0,
0,0,0,0,65,0,
0,5,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
52,0,0,7,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,51,0,
0,7,66,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,64,54,0,0,5,
34,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,14,0,
0,8,194,32,16,0,
0,0,0,0,86,9,
16,0,0,0,0,0,
6,132,32,0,1,0,
0,0,1,0,0,0,
54,0,0,5,98,32,
16,0,1,0,0,0,
86,6,16,0,0,0,
0,0,54,0,0,5,
50,32,16,0,0,0,
0,0,70,16,16,0,
1,0,0,0,56,0,
0,8,18,0,16,0,
0,0,0,0,10,16,
16,0,1,0,0,0,
10,128,32,0,1,0,
0,0,1,0,0,0,
56,0,0,8,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,10,128,32,0,
1,0,0,0,2,0,
0,0,14,0,0,8,
18,32,16,0,1,0,
0,0,10,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
1,0,0,0,54,0,
0,8,114,32,16,0,
2,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,111,30,
122,63,0,0,0,0,
54,0,0,8,242,32,
16,0,3,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,128,63,0,0,
128,63,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,4,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,18,0,
0,0,1,0,0,0,
0,0,0,0,10,0,
0,0,12,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,5,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,240,15,
213,40,132,40,130,214,
155,58,185,129,149,254,
94,241,1,0,0,0,
12,27,0,0,5,0,
0,0,52,0,0,0,
212,2,0,0,152,3,
0,0,204,3,0,0,
112,26,0,0,82,68,
69,70,152,2,0,0,
1,0,0,0,20,1,
0,0,5,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
112,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
220,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,236,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
1,0,0,0,254,0,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
2,0,0,0,1,0,
0,0,13,0,0,0,
5,1,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,3,0,0,0,
1,0,0,0,13,0,
0,0,14,1,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,95,83,
111,117,114,99,101,95,
115,97,109,112,108,101,
114,0,95,79,114,105,
103,105,110,97,108,95,
115,97,109,112,108,101,
114,0,83,111,117,114,
99,101,0,79,114,105,
103,105,110,97,108,0,
80,117,115,104,0,171,
14,1,0,0,4,0,
0,0,44,1,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
204,1,0,0,0,0,
0,0,16,0,0,0,
2,0,0,0,232,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,12,2,
0,0,16,0,0,0,
16,0,0,0,0,0,
0,0,232,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,32,2,0,0,
32,0,0,0,16,0,
0,0,0,0,0,0,
232,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
50,2,0,0,48,0,
0,0,4,0,0,0,
2,0,0,0,76,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,222,1,
0,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,112,97,
114,97,109,115,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,68,2,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,188,0,0,0,
7,0,0,0,8,0,
0,0,176,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,176,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,12,
0,0,176,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,1,0,
0,0,176,0,0,0,
3,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,6,6,
0,0,176,0,0,0,
4,0,0,0,0,0,
0,0,3,0,0,0,
2,0,0,0,7,7,
0,0,176,0,0,0,
5,0,0,0,0,0,
0,0,3,0,0,0,
3,0,0,0,3,3,
0,0,176,0,0,0,
6,0,0,0,0,0,
0,0,3,0,0,0,
3,0,0,0,12,12,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,156,22,
0,0,80,0,0,0,
167,5,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,4,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
90,0,0,3,0,96,
16,0,3,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,88,24,
0,4,0,112,16,0,
3,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,98,16,0,3,
194,16,16,0,0,0,
0,0,98,16,0,3,
98,16,16,0,1,0,
0,0,98,16,0,3,
114,16,16,0,2,0,
0,0,98,16,0,3,
50,16,16,0,3,0,
0,0,98,16,0,3,
194,16,16,0,3,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
8,0,0,0,0,0,
0,10,50,0,16,0,
0,0,0,0,70,16,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,191,0,0,0,191,
0,0,0,0,0,0,
0,0,54,0,0,8,
146,0,16,0,1,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
0,0,0,0,0,0,
0,0,64,63,54,0,
0,5,98,0,16,0,
1,0,0,0,166,26,
16,0,2,0,0,0,
56,0,0,7,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,70,0,16,0,
1,0,0,0,50,0,
0,9,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
230,10,16,0,1,0,
0,0,70,16,16,0,
2,0,0,0,15,0,
0,7,66,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,0,0,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,0,0,128,64,
56,0,0,7,130,0,
16,0,0,0,0,0,
42,16,16,0,3,0,
0,0,58,16,16,0,
3,0,0,0,50,0,
0,9,18,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,65,1,64,0,0,
0,0,128,64,56,0,
0,7,18,0,16,0,
1,0,0,0,42,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,0,0,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
56,0,0,7,18,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,64,15,0,
0,7,34,0,16,0,
1,0,0,0,70,0,
16,0,0,0,0,0,
70,16,16,0,3,0,
0,0,50,0,0,10,
130,0,16,0,0,0,
0,0,58,0,16,128,
65,0,0,0,0,0,
0,0,1,64,0,0,
0,0,0,64,26,0,
16,0,1,0,0,0,
50,0,0,9,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,64,1,64,
0,0,0,0,128,192,
0,0,0,7,34,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,50,0,
0,10,18,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
26,0,16,0,1,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,75,0,0,5,
18,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,50,0,
0,11,130,0,16,0,
0,0,0,0,58,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,64,
10,0,16,128,65,0,
0,0,1,0,0,0,
14,0,0,7,66,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,56,0,
0,10,50,0,16,0,
1,0,0,0,70,16,
16,0,3,0,0,0,
2,64,0,0,0,0,
0,192,0,0,0,192,
0,0,0,0,0,0,
0,0,50,0,0,10,
50,0,16,0,0,0,
0,0,166,10,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,0,16,128,65,0,
0,0,1,0,0,0,
56,0,0,10,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,0,
0,0,0,0,14,0,
0,7,194,0,16,0,
0,0,0,0,6,4,
16,0,0,0,0,0,
166,30,16,0,3,0,
0,0,15,0,0,7,
18,0,16,0,1,0,
0,0,230,10,16,0,
0,0,0,0,230,10,
16,0,0,0,0,0,
0,0,0,7,18,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,191,14,0,
0,7,98,0,16,0,
1,0,0,0,6,17,
16,0,3,0,0,0,
166,27,16,0,3,0,
0,0,15,0,0,7,
130,0,16,0,1,0,
0,0,150,5,16,0,
1,0,0,0,150,5,
16,0,1,0,0,0,
15,0,0,7,66,0,
16,0,0,0,0,0,
230,10,16,0,0,0,
0,0,150,5,16,0,
1,0,0,0,0,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
128,63,56,0,0,7,
18,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
0,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,56,0,
0,7,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
128,64,56,0,0,7,
34,0,16,0,1,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,192,
50,0,0,10,18,0,
16,0,1,0,0,0,
26,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,10,0,
16,128,65,0,0,0,
1,0,0,0,75,0,
0,5,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
50,0,0,10,66,0,
16,0,0,0,0,0,
42,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
0,192,10,0,16,0,
1,0,0,0,14,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,50,0,0,10,
130,0,16,0,0,0,
0,0,42,0,16,128,
129,0,0,0,0,0,
0,0,1,64,0,0,
48,110,153,188,1,64,
0,0,39,22,152,61,
50,0,0,10,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,42,0,16,128,
129,0,0,0,0,0,
0,0,1,64,0,0,
132,52,89,190,50,0,
0,10,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
42,0,16,128,129,0,
0,0,0,0,0,0,
1,64,0,0,164,13,
201,63,0,0,0,8,
18,0,16,0,1,0,
0,0,42,0,16,128,
193,0,0,0,0,0,
0,0,1,64,0,0,
0,0,128,63,75,0,
0,5,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
56,0,0,7,34,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,50,0,
0,9,34,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
0,192,1,64,0,0,
219,15,73,64,49,0,
0,8,66,0,16,0,
1,0,0,0,42,0,
16,0,0,0,0,0,
42,0,16,128,65,0,
0,0,0,0,0,0,
50,0,0,10,50,0,
16,0,0,0,0,0,
70,16,16,128,65,0,
0,0,3,0,0,0,
166,10,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,14,0,
0,7,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
230,26,16,0,3,0,
0,0,1,0,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
50,0,0,9,66,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,42,0,
16,0,0,0,0,0,
0,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,52,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
1,64,0,0,172,197,
39,55,56,0,0,7,
50,0,16,0,0,0,
0,0,166,10,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
56,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,63,77,0,
0,6,66,0,16,0,
0,0,0,0,0,208,
0,0,42,0,16,0,
0,0,0,0,14,0,
0,7,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
166,10,16,0,0,0,
0,0,50,0,0,15,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
171,170,170,63,0,0,
0,0,0,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,0,0,0,
0,0,56,0,0,8,
18,0,16,0,1,0,
0,0,10,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
0,0,0,0,86,0,
0,6,66,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
3,0,0,0,56,0,
0,7,130,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,63,65,0,0,5,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,50,0,
0,10,66,0,16,0,
0,0,0,0,58,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,64,
42,0,16,0,0,0,
0,0,49,0,0,7,
130,0,16,0,0,0,
0,0,1,64,0,0,
0,0,192,63,42,16,
16,0,1,0,0,0,
1,0,0,7,34,0,
16,0,2,0,0,0,
42,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,50,0,
0,10,66,0,16,0,
1,0,0,0,26,0,
16,0,0,0,0,0,
26,128,32,0,1,0,
0,0,0,0,0,0,
26,0,16,0,2,0,
0,0,0,0,0,10,
194,0,16,0,0,0,
0,0,6,8,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,191,0,0,0,191,
14,0,0,7,194,0,
16,0,0,0,0,0,
166,14,16,0,0,0,
0,0,86,25,16,0,
1,0,0,0,26,0,
0,5,50,0,16,0,
1,0,0,0,230,10,
16,0,0,0,0,0,
65,0,0,5,194,0,
16,0,0,0,0,0,
166,14,16,0,0,0,
0,0,50,0,0,12,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,86,25,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,63,0,0,
0,63,54,0,0,8,
146,0,16,0,2,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,8,194,0,16,0,
0,0,0,0,6,4,
16,128,65,0,0,0,
2,0,0,0,166,14,
16,0,0,0,0,0,
14,0,0,8,194,0,
16,0,0,0,0,0,
166,14,16,0,0,0,
0,0,6,132,32,0,
1,0,0,0,0,0,
0,0,54,0,0,5,
18,0,16,0,3,0,
0,0,42,16,16,0,
0,0,0,0,54,0,
0,8,162,0,16,0,
3,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,7,194,0,
16,0,1,0,0,0,
166,14,16,0,0,0,
0,0,6,4,16,0,
3,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
230,10,16,0,1,0,
0,0,70,126,16,0,
3,0,0,0,0,96,
16,0,3,0,0,0,
47,0,0,5,114,0,
16,0,4,0,0,0,
70,2,16,0,4,0,
0,0,56,0,0,10,
114,0,16,0,4,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,154,153,25,64,
154,153,25,64,154,153,
25,64,0,0,0,0,
25,0,0,5,114,0,
16,0,4,0,0,0,
70,2,16,0,4,0,
0,0,54,0,0,6,
66,0,16,0,2,0,
0,0,42,16,16,128,
65,0,0,0,0,0,
0,0,0,0,0,7,
194,0,16,0,1,0,
0,0,166,14,16,0,
2,0,0,0,166,14,
16,0,0,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,230,10,16,0,
1,0,0,0,70,126,
16,0,3,0,0,0,
0,96,16,0,3,0,
0,0,47,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,56,0,
0,10,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,154,153,
25,64,154,153,25,64,
154,153,25,64,0,0,
0,0,25,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,50,0,
0,15,242,0,16,0,
5,0,0,0,6,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,191,0,0,
128,191,2,64,0,0,
0,0,128,63,0,0,
0,0,0,0,128,63,
0,0,0,64,56,0,
0,10,242,0,16,0,
5,0,0,0,70,14,
16,0,5,0,0,0,
2,64,0,0,219,15,
73,64,219,15,73,64,
219,15,73,64,219,15,
73,64,52,0,0,10,
242,0,16,0,5,0,
0,0,70,14,16,0,
5,0,0,0,2,64,
0,0,172,197,39,55,
172,197,39,55,172,197,
39,55,172,197,39,55,
77,0,0,6,242,0,
16,0,6,0,0,0,
0,208,0,0,70,14,
16,0,5,0,0,0,
0,0,0,7,242,0,
16,0,6,0,0,0,
70,14,16,0,6,0,
0,0,70,14,16,0,
6,0,0,0,56,0,
0,10,242,0,16,0,
7,0,0,0,70,14,
16,0,5,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,63,0,0,
0,63,56,0,0,7,
242,0,16,0,5,0,
0,0,70,14,16,0,
5,0,0,0,70,14,
16,0,5,0,0,0,
77,0,0,6,242,0,
16,0,7,0,0,0,
0,208,0,0,70,14,
16,0,7,0,0,0,
56,0,0,7,242,0,
16,0,6,0,0,0,
70,14,16,0,6,0,
0,0,70,14,16,0,
7,0,0,0,14,0,
0,7,242,0,16,0,
5,0,0,0,70,14,
16,0,6,0,0,0,
70,14,16,0,5,0,
0,0,17,0,0,10,
18,0,16,0,1,0,
0,0,70,14,16,0,
5,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,128,63,
14,0,0,7,242,0,
16,0,5,0,0,0,
70,14,16,0,5,0,
0,0,6,0,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,210,0,
16,0,1,0,0,0,
230,10,16,0,0,0,
0,0,198,121,16,0,
3,0,0,0,0,96,
16,0,3,0,0,0,
47,0,0,5,210,0,
16,0,1,0,0,0,
6,14,16,0,1,0,
0,0,56,0,0,10,
210,0,16,0,1,0,
0,0,6,14,16,0,
1,0,0,0,2,64,
0,0,154,153,25,64,
0,0,0,0,154,153,
25,64,154,153,25,64,
25,0,0,5,210,0,
16,0,1,0,0,0,
6,14,16,0,1,0,
0,0,56,0,0,7,
210,0,16,0,1,0,
0,0,6,14,16,0,
1,0,0,0,86,5,
16,0,5,0,0,0,
50,0,0,9,210,0,
16,0,1,0,0,0,
6,0,16,0,5,0,
0,0,6,9,16,0,
2,0,0,0,6,14,
16,0,1,0,0,0,
50,0,0,9,210,0,
16,0,1,0,0,0,
166,10,16,0,5,0,
0,0,6,9,16,0,
4,0,0,0,6,14,
16,0,1,0,0,0,
56,0,0,7,66,0,
16,0,3,0,0,0,
42,16,16,0,0,0,
0,0,1,64,0,0,
0,0,0,64,0,0,
0,7,50,0,16,0,
2,0,0,0,230,10,
16,0,0,0,0,0,
230,10,16,0,3,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
2,0,0,0,70,0,
16,0,2,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,47,0,
0,5,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
56,0,0,10,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
154,153,25,64,154,153,
25,64,154,153,25,64,
0,0,0,0,25,0,
0,5,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
50,32,0,9,210,0,
16,0,1,0,0,0,
246,15,16,0,5,0,
0,0,6,9,16,0,
2,0,0,0,6,14,
16,0,1,0,0,0,
56,0,0,7,114,0,
16,0,2,0,0,0,
134,3,16,0,1,0,
0,0,134,3,16,0,
1,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,134,3,
16,0,1,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,15,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,205,204,204,61,
205,204,204,61,205,204,
204,61,0,0,0,0,
2,64,0,0,154,153,
153,62,154,153,153,62,
154,153,153,62,0,0,
0,0,14,0,0,7,
114,0,16,0,3,0,
0,0,86,5,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
0,0,0,8,34,0,
16,0,1,0,0,0,
26,0,16,128,65,0,
0,0,1,0,0,0,
1,64,0,0,0,0,
128,63,56,0,0,8,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,128,65,0,0,0,
3,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,59,170,
184,63,59,170,184,63,
59,170,184,63,0,0,
0,0,25,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,205,204,
204,62,205,204,204,62,
205,204,204,62,0,0,
0,0,14,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,2,0,0,0,
54,0,0,5,18,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
0,0,54,0,0,5,
34,0,16,0,3,0,
0,0,58,16,16,0,
0,0,0,0,0,0,
0,7,50,0,16,0,
3,0,0,0,230,10,
16,0,0,0,0,0,
70,0,16,0,3,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
3,0,0,0,70,0,
16,0,3,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,47,0,
0,5,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
56,0,0,10,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,2,64,0,0,
154,153,25,64,154,153,
25,64,154,153,25,64,
0,0,0,0,25,0,
0,5,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
56,0,0,7,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,86,5,16,0,
5,0,0,0,50,0,
0,12,242,0,16,0,
4,0,0,0,230,30,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,191,0,0,128,63,
0,0,0,64,0,0,
128,63,230,14,16,0,
0,0,0,0,0,0,
0,7,194,0,16,0,
0,0,0,0,166,14,
16,0,0,0,0,0,
166,30,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
6,0,0,0,230,10,
16,0,0,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,47,0,
0,5,114,0,16,0,
6,0,0,0,70,2,
16,0,6,0,0,0,
56,0,0,10,114,0,
16,0,6,0,0,0,
70,2,16,0,6,0,
0,0,2,64,0,0,
154,153,25,64,154,153,
25,64,154,153,25,64,
0,0,0,0,25,0,
0,5,114,0,16,0,
6,0,0,0,70,2,
16,0,6,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,7,0,
0,0,70,0,16,0,
4,0,0,0,70,126,
16,0,3,0,0,0,
0,96,16,0,3,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
4,0,0,0,230,10,
16,0,4,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,47,0,
0,5,114,0,16,0,
4,0,0,0,70,2,
16,0,4,0,0,0,
56,0,0,10,114,0,
16,0,4,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
154,153,25,64,154,153,
25,64,154,153,25,64,
0,0,0,0,25,0,
0,5,114,0,16,0,
4,0,0,0,70,2,
16,0,4,0,0,0,
47,0,0,5,114,0,
16,0,7,0,0,0,
70,2,16,0,7,0,
0,0,56,0,0,10,
114,0,16,0,7,0,
0,0,70,2,16,0,
7,0,0,0,2,64,
0,0,154,153,25,64,
154,153,25,64,154,153,
25,64,0,0,0,0,
25,0,0,5,114,0,
16,0,7,0,0,0,
70,2,16,0,7,0,
0,0,50,0,0,9,
114,0,16,0,3,0,
0,0,6,0,16,0,
5,0,0,0,70,2,
16,0,7,0,0,0,
70,2,16,0,3,0,
0,0,50,0,0,9,
114,0,16,0,3,0,
0,0,166,10,16,0,
5,0,0,0,70,2,
16,0,6,0,0,0,
70,2,16,0,3,0,
0,0,50,32,0,9,
114,0,16,0,3,0,
0,0,246,15,16,0,
5,0,0,0,70,2,
16,0,4,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,7,
114,0,16,0,4,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
56,0,0,7,114,0,
16,0,4,0,0,0,
70,2,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,50,0,
0,15,114,0,16,0,
4,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,205,204,
204,61,205,204,204,61,
205,204,204,61,0,0,
0,0,2,64,0,0,
154,153,153,62,154,153,
153,62,154,153,153,62,
0,0,0,0,14,0,
0,7,114,0,16,0,
5,0,0,0,86,5,
16,0,1,0,0,0,
70,2,16,0,4,0,
0,0,56,0,0,8,
114,0,16,0,5,0,
0,0,70,2,16,0,
5,0,0,0,70,2,
16,128,65,0,0,0,
5,0,0,0,56,0,
0,10,114,0,16,0,
5,0,0,0,70,2,
16,0,5,0,0,0,
2,64,0,0,59,170,
184,63,59,170,184,63,
59,170,184,63,0,0,
0,0,25,0,0,5,
114,0,16,0,5,0,
0,0,70,2,16,0,
5,0,0,0,56,0,
0,10,114,0,16,0,
5,0,0,0,70,2,
16,0,5,0,0,0,
2,64,0,0,205,204,
204,62,205,204,204,62,
205,204,204,62,0,0,
0,0,14,0,0,7,
114,0,16,0,4,0,
0,0,70,2,16,0,
5,0,0,0,70,2,
16,0,4,0,0,0,
56,0,0,7,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,50,0,
0,9,114,0,16,0,
1,0,0,0,134,3,
16,0,1,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
3,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,2,0,0,0,
70,0,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
47,0,0,5,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,56,0,0,10,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,205,204,12,64,
205,204,12,64,205,204,
12,64,0,0,0,0,
25,0,0,5,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,12,
114,0,16,0,1,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,205,204,204,61,
205,204,204,61,205,204,
204,61,0,0,0,0,
70,2,16,0,1,0,
0,0,0,0,0,11,
194,0,16,0,0,0,
0,0,6,4,16,128,
65,0,0,0,0,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,128,63,
0,0,128,63,51,0,
0,7,50,0,16,0,
0,0,0,0,230,10,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,56,0,0,10,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,64,63,0,0,
0,0,0,0,0,0,
51,0,0,10,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,2,64,0,0,
10,215,35,60,10,215,
35,60,0,0,0,0,
0,0,0,0,0,0,
0,11,50,0,16,0,
0,0,0,0,70,0,
16,128,65,0,0,0,
0,0,0,0,2,64,
0,0,10,215,35,60,
10,215,35,60,0,0,
0,0,0,0,0,0,
15,0,0,7,18,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,75,0,
0,5,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
0,0,0,8,18,0,
16,0,0,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,10,215,
35,60,56,32,0,7,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,0,0,72,68,
56,0,0,7,114,0,
16,0,0,0,0,0,
6,0,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,47,0,
0,5,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
56,0,0,10,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,2,64,0,0,
46,186,232,62,46,186,
232,62,46,186,232,62,
0,0,0,0,25,0,
0,5,114,32,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,62,0,0,1,
83,84,65,84,148,0,
0,0,178,0,0,0,
8,0,0,0,0,0,
0,0,7,0,0,0,
157,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,9,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
8,0,0,0,0,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};

}

namespace RetroArch
{
class CrtShadersCrtInterlacedHalationCrtInterlacedHalationPass2ShaderDef : public ShaderDef
{
public:
	CrtShadersCrtInterlacedHalationCrtInterlacedHalationPass2ShaderDef() : ShaderDef{}
	{
		Name = "crt-interlaced-halation-pass2";
		VertexByteCode = RetroArchCrtShadersCrtInterlacedHalationCrtInterlacedHalationPass2ShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersCrtInterlacedHalationCrtInterlacedHalationPass2ShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersCrtInterlacedHalationCrtInterlacedHalationPass2ShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersCrtInterlacedHalationCrtInterlacedHalationPass2ShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Original", 3));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
