/*
ShaderGlass shader crt-shaders\zfast_crt imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/crt/shaders/zfast_crt.slang
See original file for credits and usage license. 
This file is auto-generated, do not modify directly.
*/

#pragma once

namespace RetroArchCrtShadersZfast_crtShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,31,242,
217,64,236,25,55,173,
226,19,216,134,116,156,
216,53,1,0,0,0,
56,7,0,0,5,0,
0,0,52,0,0,0,
68,4,0,0,144,4,
0,0,24,5,0,0,
156,6,0,0,82,68,
69,70,8,4,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
224,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,10,0,0,0,
24,1,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,168,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,196,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,232,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
196,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
252,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,196,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,14,3,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,40,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,76,3,0,0,
52,0,0,0,4,0,
0,0,0,0,0,0,
100,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
136,3,0,0,56,0,
0,0,4,0,0,0,
0,0,0,0,100,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,154,3,
0,0,60,0,0,0,
4,0,0,0,0,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,171,3,0,0,
64,0,0,0,4,0,
0,0,0,0,0,0,
100,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
190,3,0,0,68,0,
0,0,4,0,0,0,
0,0,0,0,100,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,207,3,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,186,2,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
32,3,0,0,112,97,
114,97,109,115,95,66,
76,85,82,83,67,65,
76,69,88,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
94,3,0,0,112,97,
114,97,109,115,95,76,
79,87,76,85,77,83,
67,65,78,0,112,97,
114,97,109,115,95,72,
73,76,85,77,83,67,
65,78,0,112,97,114,
97,109,115,95,66,82,
73,71,72,84,66,79,
79,83,84,0,112,97,
114,97,109,115,95,77,
65,83,75,95,68,65,
82,75,0,112,97,114,
97,109,115,95,77,65,
83,75,95,70,65,68,
69,0,77,105,99,114,
111,115,111,102,116,32,
40,82,41,32,72,76,
83,76,32,83,104,97,
100,101,114,32,67,111,
109,112,105,108,101,114,
32,49,48,46,49,0,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,128,0,0,0,
4,0,0,0,8,0,
0,0,104,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,104,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,4,11,
0,0,104,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,12,
0,0,113,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
2,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
124,1,0,0,80,0,
1,0,95,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,4,0,
0,0,89,0,0,4,
70,142,32,0,1,0,
0,0,5,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
101,0,0,3,66,32,
16,0,0,0,0,0,
101,0,0,3,50,32,
16,0,1,0,0,0,
103,0,0,4,242,32,
16,0,2,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
66,32,16,0,0,0,
0,0,1,64,0,0,
76,166,170,62,42,128,
32,0,1,0,0,0,
4,0,0,0,14,0,
0,11,50,32,16,0,
1,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,128,63,
70,128,32,0,1,0,
0,0,0,0,0,0,
56,0,0,8,242,0,
16,0,0,0,0,0,
86,21,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,1,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,6,16,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
166,26,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,2,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,32,16,0,
2,0,0,0,246,31,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,3,0,0,0,
70,14,16,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,8,0,0,0,
1,0,0,0,0,0,
0,0,6,0,0,0,
6,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,119,127,
87,84,236,63,88,55,
190,224,159,114,35,190,
143,194,1,0,0,0,
240,8,0,0,5,0,
0,0,52,0,0,0,
252,3,0,0,96,4,
0,0,148,4,0,0,
84,8,0,0,82,68,
69,70,192,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
152,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,10,0,0,0,
208,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,96,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,124,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,160,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
124,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
180,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,124,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,198,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,224,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,4,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
28,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
64,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,28,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,82,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,28,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,99,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
28,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
118,3,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,28,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,135,3,
0,0,72,0,0,0,
4,0,0,0,0,0,
0,0,28,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,114,2,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
216,2,0,0,112,97,
114,97,109,115,95,66,
76,85,82,83,67,65,
76,69,88,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
22,3,0,0,112,97,
114,97,109,115,95,76,
79,87,76,85,77,83,
67,65,78,0,112,97,
114,97,109,115,95,72,
73,76,85,77,83,67,
65,78,0,112,97,114,
97,109,115,95,66,82,
73,71,72,84,66,79,
79,83,84,0,112,97,
114,97,109,115,95,77,
65,83,75,95,68,65,
82,75,0,112,97,114,
97,109,115,95,77,65,
83,75,95,70,65,68,
69,0,77,105,99,114,
111,115,111,102,116,32,
40,82,41,32,72,76,
83,76,32,83,104,97,
100,101,114,32,67,111,
109,112,105,108,101,114,
32,49,48,46,49,0,
73,83,71,78,92,0,
0,0,3,0,0,0,
8,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,80,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
4,4,0,0,80,0,
0,0,2,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
184,3,0,0,80,0,
0,0,238,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
1,0,0,0,5,0,
0,0,90,0,0,3,
0,96,16,0,2,0,
0,0,88,24,0,4,
0,112,16,0,2,0,
0,0,85,85,0,0,
98,16,0,3,50,16,
16,0,0,0,0,0,
98,16,0,3,66,16,
16,0,0,0,0,0,
98,16,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,242,32,
16,0,0,0,0,0,
104,0,0,2,3,0,
0,0,56,0,0,8,
50,0,16,0,0,0,
0,0,70,16,16,0,
0,0,0,0,70,128,
32,0,1,0,0,0,
0,0,0,0,65,0,
0,5,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
0,0,0,10,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,0,
0,0,0,0,50,0,
0,11,194,0,16,0,
0,0,0,0,6,20,
16,0,0,0,0,0,
6,132,32,0,1,0,
0,0,0,0,0,0,
6,4,16,128,65,0,
0,0,0,0,0,0,
56,0,0,7,50,0,
16,0,1,0,0,0,
230,10,16,0,0,0,
0,0,230,10,16,0,
0,0,0,0,56,0,
0,7,194,0,16,0,
0,0,0,0,166,14,
16,0,0,0,0,0,
6,4,16,0,1,0,
0,0,50,0,0,12,
50,0,16,0,0,0,
0,0,230,10,16,0,
0,0,0,0,2,64,
0,0,0,0,128,64,
0,0,128,64,0,0,
0,0,0,0,0,0,
70,0,16,0,0,0,
0,0,50,0,0,10,
66,0,16,0,0,0,
0,0,10,0,16,128,
65,0,0,0,0,0,
0,0,10,16,16,0,
1,0,0,0,10,16,
16,0,0,0,0,0,
56,0,0,7,98,0,
16,0,2,0,0,0,
6,1,16,0,0,0,
0,0,6,17,16,0,
1,0,0,0,50,0,
0,10,18,0,16,0,
2,0,0,0,26,128,
32,0,1,0,0,0,
3,0,0,0,42,0,
16,0,0,0,0,0,
26,0,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
0,0,0,0,134,0,
16,0,2,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,7,130,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
166,26,16,0,0,0,
0,0,56,0,0,7,
18,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
56,0,0,7,66,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,50,0,
0,10,34,0,16,0,
1,0,0,0,10,0,
16,128,65,0,0,0,
1,0,0,0,1,64,
0,0,51,51,3,64,
26,0,16,0,1,0,
0,0,50,0,0,10,
18,0,16,0,1,0,
0,0,42,0,16,128,
65,0,0,0,1,0,
0,0,1,64,0,0,
51,51,51,64,10,0,
16,0,1,0,0,0,
50,0,0,11,18,0,
16,0,1,0,0,0,
58,128,32,128,65,0,
0,0,1,0,0,0,
3,0,0,0,10,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
128,63,50,0,0,12,
34,0,16,0,1,0,
0,0,42,128,32,128,
65,0,0,0,1,0,
0,0,3,0,0,0,
26,0,16,0,1,0,
0,0,10,128,32,0,
1,0,0,0,4,0,
0,0,0,0,0,9,
66,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,63,26,128,
32,128,65,0,0,0,
1,0,0,0,4,0,
0,0,50,0,0,10,
18,0,16,0,1,0,
0,0,26,0,16,128,
65,0,0,0,1,0,
0,0,42,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
56,0,0,7,34,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,50,0,
0,9,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,56,0,
0,7,114,32,16,0,
0,0,0,0,246,15,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,54,0,0,5,
130,32,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,25,0,
0,0,3,0,0,0,
0,0,0,0,4,0,
0,0,22,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class CrtShadersZfast_crtShaderDef : public ShaderDef
{
public:
	CrtShadersZfast_crtShaderDef() : ShaderDef{}
	{
		Name = "zfast_crt";
		VertexByteCode = RetroArchCrtShadersZfast_crtShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersZfast_crtShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersZfast_crtShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersZfast_crtShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("BLURSCALEX", -1, 52, 4, 0.000000f, 1.000000f, 0.300000f));
		Params.push_back(ShaderParam("LOWLUMSCAN", -1, 56, 4, 0.000000f, 10.000000f, 6.000000f));
		Params.push_back(ShaderParam("HILUMSCAN", -1, 60, 4, 0.000000f, 50.000000f, 8.000000f));
		Params.push_back(ShaderParam("BRIGHTBOOST", -1, 64, 4, 0.500000f, 1.500000f, 1.250000f));
		Params.push_back(ShaderParam("MASK_DARK", -1, 68, 4, 0.000000f, 1.000000f, 0.250000f));
		Params.push_back(ShaderParam("MASK_FADE", -1, 72, 4, 0.000000f, 1.000000f, 0.800000f));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
