/*
ShaderGlass shader gpu-shaders-3dfx\3dfx_pass_0 imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/gpu/shaders/3dfx/3dfx_pass_0.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// "LeiFX" shader - "dither" and reduction process
//
// 	Copyright (C) 2013-2014 leilei
//
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
// This table came from the wikipedia article about Ordered Dithering. NOT MAME.  Just to clarify.
// Dither. Total rewrite.
// NOW, WHAT PIXEL AM I!??
//	for (yeh=ditdex; yeh<(ditdex+16); yeh++) ohyes = pow(erroredtable[yeh-15], 0.72f);
// Adjust the dither thing
//
// Reduce to 16-bit color
//
// Add the purple line of lineness here, so the filter process catches it and gets gammaed.

*/

#pragma once

namespace RetroArchGpuShaders3dfx3dfx_pass_0ShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,110,239,
1,38,44,138,120,137,
121,214,212,137,93,170,
129,5,1,0,0,0,
140,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
240,2,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,8,1,
0,0,80,0,1,0,
66,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,6,0,
0,0,1,0,0,0,
0,0,0,0,4,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,233,57,
253,143,94,88,119,120,
38,205,225,204,74,251,
202,206,1,0,0,0,
32,11,0,0,5,0,
0,0,52,0,0,0,
224,2,0,0,20,3,
0,0,72,3,0,0,
132,10,0,0,82,68,
69,70,164,2,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
124,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,5,0,0,0,
208,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,152,1,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,180,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,216,1,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
180,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
236,1,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,180,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,254,1,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,24,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,60,2,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
88,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,83,111,117,114,99,
101,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
170,1,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
171,171,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,16,2,
0,0,112,97,114,97,
109,115,95,76,69,73,
70,88,95,76,73,78,
69,83,0,102,108,111,
97,116,0,171,171,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,79,2,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,52,7,
0,0,80,0,0,0,
205,1,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,4,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,4,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,0,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,56,0,0,8,
50,0,16,0,1,0,
0,0,70,16,16,0,
0,0,0,0,70,128,
32,0,1,0,0,0,
0,0,0,0,56,0,
0,10,114,0,16,0,
2,0,0,0,70,1,
16,0,1,0,0,0,
2,64,0,0,0,0,
128,62,0,0,128,62,
0,0,0,63,0,0,
0,0,65,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,50,0,
0,13,82,0,16,0,
1,0,0,0,6,1,
16,128,65,0,0,0,
2,0,0,0,2,64,
0,0,0,0,128,64,
0,0,0,0,0,0,
128,64,0,0,0,0,
6,1,16,0,1,0,
0,0,27,0,0,5,
82,0,16,0,1,0,
0,0,6,2,16,0,
1,0,0,0,41,0,
0,7,130,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
1,64,0,0,2,0,
0,0,30,0,0,7,
130,0,16,0,0,0,
0,0,42,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
56,0,0,7,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,1,64,0,0,
0,0,127,67,43,0,
0,5,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
24,0,0,7,18,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,31,0,
4,3,10,0,16,0,
1,0,0,0,54,0,
0,5,18,0,16,0,
1,0,0,0,1,64,
0,0,0,0,128,65,
18,0,0,1,24,0,
0,7,66,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,31,0,4,3,
42,0,16,0,1,0,
0,0,54,0,0,5,
18,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,64,18,0,
0,1,24,0,0,7,
66,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,64,
31,0,4,3,42,0,
16,0,1,0,0,0,
54,0,0,5,18,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
80,65,18,0,0,1,
24,0,0,7,66,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,64,64,31,0,
4,3,42,0,16,0,
1,0,0,0,54,0,
0,5,18,0,16,0,
1,0,0,0,1,64,
0,0,0,0,128,63,
18,0,0,1,24,0,
0,7,66,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,64,31,0,4,3,
42,0,16,0,1,0,
0,0,54,0,0,5,
18,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,65,18,0,
0,1,24,0,0,7,
66,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,0,0,160,64,
31,0,4,3,42,0,
16,0,1,0,0,0,
54,0,0,5,18,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
64,65,18,0,0,1,
24,0,0,7,66,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,192,64,31,0,
4,3,42,0,16,0,
1,0,0,0,54,0,
0,5,18,0,16,0,
1,0,0,0,1,64,
0,0,0,0,160,64,
18,0,0,1,24,0,
0,7,66,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
224,64,31,0,4,3,
42,0,16,0,1,0,
0,0,54,0,0,5,
18,0,16,0,1,0,
0,0,1,64,0,0,
0,0,16,65,18,0,
0,1,24,0,0,7,
66,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,65,
31,0,4,3,42,0,
16,0,1,0,0,0,
54,0,0,5,18,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
96,65,18,0,0,1,
24,0,0,7,66,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,16,65,31,0,
4,3,42,0,16,0,
1,0,0,0,54,0,
0,5,18,0,16,0,
1,0,0,0,1,64,
0,0,0,0,0,64,
18,0,0,1,24,0,
0,10,242,0,16,0,
3,0,0,0,246,15,
16,0,0,0,0,0,
2,64,0,0,0,0,
32,65,0,0,48,65,
0,0,64,65,0,0,
80,65,24,0,0,10,
194,0,16,0,1,0,
0,0,246,15,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
96,65,0,0,112,65,
1,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,1,0,
0,0,1,64,0,0,
0,0,48,65,55,0,
0,9,130,0,16,0,
0,0,0,0,42,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
224,64,58,0,16,0,
0,0,0,0,55,0,
0,9,130,0,16,0,
0,0,0,0,58,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
32,65,58,0,16,0,
0,0,0,0,55,0,
0,9,130,0,16,0,
0,0,0,0,42,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
192,64,58,0,16,0,
0,0,0,0,55,0,
0,9,130,0,16,0,
0,0,0,0,26,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
64,64,58,0,16,0,
0,0,0,0,55,0,
0,9,18,0,16,0,
1,0,0,0,10,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
112,65,58,0,16,0,
0,0,0,0,21,0,
0,1,21,0,0,1,
21,0,0,1,21,0,
0,1,21,0,0,1,
21,0,0,1,21,0,
0,1,21,0,0,1,
21,0,0,1,21,0,
0,1,0,0,0,7,
130,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,1,64,
0,0,0,0,128,191,
0,0,0,8,130,0,
16,0,0,0,0,0,
58,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
136,65,50,0,0,9,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
1,64,0,0,0,0,
128,191,50,0,0,9,
34,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
26,0,16,0,0,0,
0,0,50,0,0,12,
82,0,16,0,0,0,
0,0,6,2,16,0,
0,0,0,0,2,64,
0,0,0,0,127,67,
0,0,0,0,0,0,
127,67,0,0,0,0,
246,15,16,0,0,0,
0,0,56,0,0,10,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,2,64,
0,0,129,128,0,62,
129,128,128,62,129,128,
0,62,0,0,0,0,
65,0,0,5,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,56,0,0,7,
34,32,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,1,64,
0,0,0,0,128,60,
56,0,0,8,34,0,
16,0,0,0,0,0,
1,64,0,0,205,204,
204,61,26,128,32,0,
1,0,0,0,3,0,
0,0,50,0,0,10,
130,0,16,0,0,0,
0,0,42,0,16,128,
65,0,0,0,2,0,
0,0,1,64,0,0,
0,0,0,64,26,0,
16,0,1,0,0,0,
49,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,55,0,
0,9,34,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,26,0,16,0,
0,0,0,0,50,0,
0,12,82,32,16,0,
0,0,0,0,6,2,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,61,0,0,0,0,
0,0,0,61,0,0,
0,0,86,5,16,0,
0,0,0,0,54,0,
0,5,130,32,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
62,0,0,1,83,84,
65,84,148,0,0,0,
83,0,0,0,4,0,
0,0,0,0,0,0,
2,0,0,0,29,0,
0,0,2,0,0,0,
1,0,0,0,11,0,
0,0,10,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,11,0,
0,0,6,0,0,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class GpuShaders3dfx3dfx_pass_0ShaderDef : public ShaderDef
{
public:
	GpuShaders3dfx3dfx_pass_0ShaderDef() : ShaderDef{}
	{
		Name = "3dfx_pass_0";
		VertexByteCode = RetroArchGpuShaders3dfx3dfx_pass_0ShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchGpuShaders3dfx3dfx_pass_0ShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchGpuShaders3dfx3dfx_pass_0ShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchGpuShaders3dfx3dfx_pass_0ShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("LEIFX_LINES", -1, 52, 4, 0.000000f, 1.000000f, 0.050000f));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
