/*
ShaderGlass shader vhs-shaders\mudlord-pal-vhs imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/vhs/shaders/mudlord-pal-vhs.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

*/

#pragma once

namespace RetroArchVhsShadersMudlordPalVhsShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,110,239,
1,38,44,138,120,137,
121,214,212,137,93,170,
129,5,1,0,0,0,
140,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
240,2,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,8,1,
0,0,80,0,1,0,
66,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,6,0,
0,0,1,0,0,0,
0,0,0,0,4,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,72,26,
164,131,241,68,86,95,
79,184,67,157,110,217,
224,158,1,0,0,0,
56,16,0,0,5,0,
0,0,52,0,0,0,
52,4,0,0,104,4,
0,0,156,4,0,0,
156,15,0,0,82,68,
69,70,248,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
207,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,11,0,0,0,
208,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,136,2,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,164,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,200,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
164,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
220,2,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,164,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,238,2,
0,0,48,0,0,0,
4,0,0,0,2,0,
0,0,8,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
68,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
104,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,68,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,122,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,68,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,144,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
68,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
159,3,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,68,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,176,3,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,68,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,193,3,0,0,
76,0,0,0,4,0,
0,0,2,0,0,0,
68,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,83,111,117,114,99,
101,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
154,2,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
171,171,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,3,
0,0,112,97,114,97,
109,115,95,102,114,97,
109,101,83,104,97,112,
101,0,102,108,111,97,
116,0,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,62,3,
0,0,112,97,114,97,
109,115,95,102,114,97,
109,101,76,105,109,105,
116,0,112,97,114,97,
109,115,95,102,114,97,
109,101,83,104,97,114,
112,110,101,115,115,0,
112,97,114,97,109,115,
95,84,86,78,111,105,
115,101,0,112,97,114,
97,109,115,95,80,65,
76,83,105,103,110,97,
108,0,112,97,114,97,
109,115,95,112,104,111,
115,112,104,111,114,115,
0,112,97,114,97,109,
115,95,98,111,114,100,
101,114,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,73,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,248,10,0,0,
80,0,0,0,190,2,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
5,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
7,0,0,0,0,0,
0,10,50,0,16,0,
0,0,0,0,70,16,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,191,0,0,0,191,
0,0,0,0,0,0,
0,0,56,0,0,8,
66,0,16,0,0,0,
0,0,26,0,16,128,
129,0,0,0,0,0,
0,0,1,64,0,0,
0,0,0,63,50,0,
0,9,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,56,0,
0,7,66,0,16,0,
1,0,0,0,42,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,56,0,0,8,
18,0,16,0,0,0,
0,0,42,0,16,128,
129,0,0,0,1,0,
0,0,1,64,0,0,
0,0,0,63,50,0,
0,9,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,56,0,
0,7,130,0,16,0,
1,0,0,0,10,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,0,0,0,10,
50,0,16,0,0,0,
0,0,230,10,16,0,
1,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,0,0,0,0,0,
24,0,0,11,114,0,
16,0,2,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
0,0,150,135,32,0,
1,0,0,0,4,0,
0,0,31,0,4,3,
10,0,16,0,2,0,
0,0,24,0,0,8,
66,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,10,128,
32,0,1,0,0,0,
4,0,0,0,86,0,
0,6,130,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
3,0,0,0,56,0,
0,7,146,0,16,0,
2,0,0,0,246,15,
16,0,0,0,0,0,
6,4,16,0,0,0,
0,0,56,0,0,10,
146,0,16,0,2,0,
0,0,6,12,16,0,
2,0,0,0,2,64,
0,0,205,204,204,61,
0,0,0,0,0,0,
0,0,0,0,72,66,
0,0,0,7,66,0,
16,0,1,0,0,0,
58,0,16,0,2,0,
0,0,10,0,16,0,
2,0,0,0,0,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,15,0,0,10,
130,0,16,0,0,0,
0,0,246,15,16,0,
0,0,0,0,2,64,
0,0,57,214,79,65,
76,119,156,66,0,0,
0,0,0,0,0,0,
56,0,0,7,66,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
172,14,163,62,65,0,
0,5,66,0,16,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
50,0,0,10,130,0,
16,0,0,0,0,0,
42,0,16,128,65,0,
0,0,1,0,0,0,
1,64,0,0,195,245,
72,64,58,0,16,0,
0,0,0,0,77,0,
0,6,130,0,16,0,
0,0,0,0,0,208,
0,0,58,0,16,0,
0,0,0,0,56,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,128,238,
42,71,26,0,0,5,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,50,0,
0,10,130,0,16,0,
0,0,0,0,58,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
1,64,0,0,0,0,
128,63,55,0,0,9,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,54,0,0,8,
226,0,16,0,3,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,54,0,
0,5,130,0,16,0,
0,0,0,0,1,64,
0,0,10,0,0,0,
48,0,0,1,34,0,
0,7,66,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,3,0,4,3,
42,0,16,0,1,0,
0,0,43,0,0,5,
66,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,56,0,
0,7,18,0,16,0,
2,0,0,0,42,0,
16,0,1,0,0,0,
1,64,0,0,205,204,
204,61,49,0,0,7,
66,0,16,0,1,0,
0,0,42,0,16,0,
1,0,0,0,1,64,
0,0,0,0,0,0,
55,0,0,9,66,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,0,10,0,
16,0,2,0,0,0,
50,0,0,12,50,0,
16,0,1,0,0,0,
166,10,16,0,1,0,
0,0,2,64,0,0,
144,194,117,188,144,194,
245,60,0,0,0,0,
0,0,0,0,6,0,
16,0,0,0,0,0,
47,0,0,5,66,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,56,0,0,10,
114,0,16,0,4,0,
0,0,166,10,16,0,
1,0,0,0,2,64,
0,0,205,204,76,62,
0,0,128,63,0,0,
128,63,0,0,0,0,
25,0,0,5,114,0,
16,0,4,0,0,0,
70,2,16,0,4,0,
0,0,0,0,0,11,
114,0,16,0,4,0,
0,0,70,2,16,128,
65,0,0,0,4,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,56,0,
0,10,114,0,16,0,
4,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,205,204,
76,62,205,204,76,62,
205,204,76,62,0,0,
0,0,0,0,0,10,
242,0,16,0,5,0,
0,0,198,13,16,0,
1,0,0,0,2,64,
0,0,111,18,3,187,
0,0,0,63,111,18,
3,187,0,0,0,63,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,1,0,
0,0,70,0,16,0,
5,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
18,0,16,0,6,0,
0,0,70,2,16,0,
1,0,0,0,2,64,
0,0,135,22,153,62,
162,69,22,63,213,120,
233,61,0,0,0,0,
16,0,0,10,34,0,
16,0,6,0,0,0,
70,2,16,0,1,0,
0,0,2,64,0,0,
43,135,22,190,207,247,
147,190,100,59,223,62,
0,0,0,0,16,0,
0,10,66,0,16,0,
6,0,0,0,70,2,
16,0,1,0,0,0,
2,64,0,0,164,112,
29,63,10,215,3,191,
205,204,204,189,0,0,
0,0,50,0,0,9,
114,0,16,0,1,0,
0,0,70,2,16,0,
6,0,0,0,70,2,
16,0,4,0,0,0,
150,7,16,0,3,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
5,0,0,0,230,10,
16,0,5,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
6,0,0,0,70,2,
16,0,5,0,0,0,
2,64,0,0,135,22,
153,62,162,69,22,63,
213,120,233,61,0,0,
0,0,16,0,0,10,
34,0,16,0,6,0,
0,0,70,2,16,0,
5,0,0,0,2,64,
0,0,43,135,22,190,
207,247,147,190,100,59,
223,62,0,0,0,0,
16,0,0,10,66,0,
16,0,6,0,0,0,
70,2,16,0,5,0,
0,0,2,64,0,0,
164,112,29,63,10,215,
3,191,205,204,204,189,
0,0,0,0,50,0,
0,9,226,0,16,0,
3,0,0,0,6,9,
16,0,6,0,0,0,
6,9,16,0,4,0,
0,0,6,9,16,0,
1,0,0,0,30,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,255,255,
255,255,22,0,0,1,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,1,0,
0,0,70,0,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
130,0,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,2,64,
0,0,135,22,153,62,
162,69,22,63,213,120,
233,61,0,0,0,0,
56,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
205,204,76,63,50,0,
0,9,18,0,16,0,
3,0,0,0,26,0,
16,0,3,0,0,0,
1,64,0,0,205,204,
76,62,58,0,16,0,
0,0,0,0,15,0,
0,10,18,0,16,0,
1,0,0,0,198,0,
16,0,3,0,0,0,
2,64,0,0,0,0,
128,63,133,235,145,63,
0,0,0,0,0,0,
0,0,16,0,0,10,
34,0,16,0,1,0,
0,0,134,3,16,0,
3,0,0,0,2,64,
0,0,0,0,128,63,
113,61,202,190,106,188,
20,191,0,0,0,0,
15,0,0,10,66,0,
16,0,1,0,0,0,
134,0,16,0,3,0,
0,0,2,64,0,0,
0,0,128,63,74,12,
2,64,0,0,0,0,
0,0,0,0,56,0,
0,7,114,0,16,0,
1,0,0,0,166,10,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,18,0,0,1,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,1,0,
0,0,70,0,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,21,0,0,1,
56,0,0,9,66,0,
16,0,0,0,0,0,
26,128,32,0,1,0,
0,0,2,0,0,0,
26,128,32,0,1,0,
0,0,2,0,0,0,
56,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,26,16,16,0,
0,0,0,0,14,0,
0,8,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
26,128,32,0,1,0,
0,0,2,0,0,0,
56,0,0,7,130,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,63,65,0,
0,5,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
50,0,0,10,66,0,
16,0,0,0,0,0,
58,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
0,64,42,0,16,0,
0,0,0,0,65,0,
0,5,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
50,0,0,15,114,0,
16,0,3,0,0,0,
166,10,16,0,0,0,
0,0,2,64,0,0,
154,153,153,190,154,153,
153,62,154,153,153,190,
0,0,0,0,2,64,
0,0,0,0,128,63,
51,51,51,63,0,0,
128,63,0,0,0,0,
56,0,0,7,114,0,
16,0,3,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
3,0,0,0,55,0,
0,9,114,0,16,0,
1,0,0,0,86,5,
16,0,2,0,0,0,
70,2,16,0,3,0,
0,0,70,2,16,0,
1,0,0,0,50,0,
0,15,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,64,0,0,0,64,
0,0,0,0,0,0,
0,0,2,64,0,0,
0,0,128,191,0,0,
128,191,0,0,0,0,
0,0,0,0,50,0,
0,13,50,0,16,0,
0,0,0,0,70,0,
16,128,65,0,0,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,0,0,0,0,
0,0,56,0,0,7,
18,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
47,0,0,5,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,56,0,0,8,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,26,128,
32,0,1,0,0,0,
3,0,0,0,25,0,
0,5,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
0,0,0,9,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,42,128,32,128,
65,0,0,0,1,0,
0,0,3,0,0,0,
56,32,0,8,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,58,128,32,0,
1,0,0,0,3,0,
0,0,56,0,0,7,
114,0,16,0,0,0,
0,0,6,0,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
55,0,0,9,114,32,
16,0,0,0,0,0,
166,10,16,0,2,0,
0,0,70,2,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,62,0,0,1,
83,84,65,84,148,0,
0,0,86,0,0,0,
7,0,0,0,0,0,
0,0,2,0,0,0,
64,0,0,0,2,0,
0,0,0,0,0,0,
2,0,0,0,2,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,4,0,
0,0,6,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};

}

namespace RetroArch
{
class VhsShadersMudlordPalVhsShaderDef : public ShaderDef
{
public:
	VhsShadersMudlordPalVhsShaderDef() : ShaderDef{}
	{
		Name = "mudlord-pal-vhs";
		VertexByteCode = RetroArchVhsShadersMudlordPalVhsShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchVhsShadersMudlordPalVhsShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchVhsShadersMudlordPalVhsShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchVhsShadersMudlordPalVhsShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("frameShape", -1, 52, 4, 0.000000f, 1.000000f, 0.350000f, 0.010000f, "Border mask shape"));
		Params.push_back(ShaderParam("frameLimit", -1, 56, 4, 0.000000f, 1.000000f, 0.300000f, 0.010000f, "Border mask limit"));
		Params.push_back(ShaderParam("frameSharpness", -1, 60, 4, 0.000000f, 4.000000f, 1.100000f, 0.010000f, "Border mask sharpness"));
		Params.push_back(ShaderParam("TVNoise", -1, 64, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "PAL signal modulation + noise"));
		Params.push_back(ShaderParam("PALSignal", -1, 68, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "PAL signal simulation"));
		Params.push_back(ShaderParam("phosphors", -1, 72, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Phosphor mask"));
		Params.push_back(ShaderParam("border", -1, 76, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Border mask"));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
