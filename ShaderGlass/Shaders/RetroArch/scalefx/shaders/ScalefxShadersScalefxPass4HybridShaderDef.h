/*
ShaderGlass shader scalefx-shaders\scalefx-pass4-hybrid imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/scalefx/shaders/scalefx-pass4-hybrid.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


ScaleFX - Pass 4
by Sp00kyFox, 2017-03-01

Filter:	Nearest
Scale:	3x

ScaleFX is an edge interpolation algorithm specialized in pixel art. It was
originally intended as an improvement upon Scale3x but became a new filter in
its own right.
ScaleFX interpolates edges up to level 6 and makes smooth transitions between
different slopes. The filtered picture will only consist of colours present
in the original.

Pass 4 outputs subpixels based on previously calculated tags.



Copyright (c) 2016 Sp00kyFox - ScaleFX@web.de

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


// extract corners
// extract mids
	grid		corners		mids

B		x   y	  	  x
D E F				w   y
H		w   z	  	  z

// read data
// determine subpixel
// check adjacent pixels to prevent artifacts
// extract data
// reverseAA
// output coordinate - 0 = E0, 1 = D0, 2 = D1, 3 = F0, 4 = F1, 5 = B0, 6 = B1, 7 = H0, 8 = H1
// rAA weight
// rAA filter
// hybrid output

*/

#pragma once

namespace RetroArchScalefxShadersScalefxPass4HybridShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,110,239,
1,38,44,138,120,137,
121,214,212,137,93,170,
129,5,1,0,0,0,
140,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
240,2,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,8,1,
0,0,80,0,1,0,
66,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,6,0,
0,0,1,0,0,0,
0,0,0,0,4,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,237,15,
177,75,162,193,171,216,
110,171,179,93,209,146,
168,252,1,0,0,0,
112,22,0,0,5,0,
0,0,52,0,0,0,
92,2,0,0,144,2,
0,0,196,2,0,0,
212,21,0,0,82,68,
69,70,32,2,0,0,
1,0,0,0,20,1,
0,0,5,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
248,1,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
220,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,1,0,
0,0,236,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,2,0,
0,0,1,0,0,0,
1,0,0,0,253,0,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
1,0,0,0,1,0,
0,0,13,0,0,0,
4,1,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,2,0,0,0,
1,0,0,0,13,0,
0,0,12,1,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,95,83,
111,117,114,99,101,95,
115,97,109,112,108,101,
114,0,95,114,101,102,
112,97,115,115,95,115,
97,109,112,108,101,114,
0,83,111,117,114,99,
101,0,114,101,102,112,
97,115,115,0,80,117,
115,104,0,171,171,171,
12,1,0,0,2,0,
0,0,44,1,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
124,1,0,0,0,0,
0,0,16,0,0,0,
2,0,0,0,152,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,188,1,
0,0,16,0,0,0,
4,0,0,0,2,0,
0,0,212,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,142,1,0,0,
112,97,114,97,109,115,
95,83,70,88,95,82,
65,65,0,102,108,111,
97,116,0,171,171,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,203,1,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,8,19,
0,0,80,0,0,0,
194,4,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,2,0,0,0,
90,0,0,3,0,96,
16,0,1,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,1,0,0,0,
85,85,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
14,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,242,0,
16,0,0,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
1,0,0,0,0,96,
16,0,1,0,0,0,
56,0,0,8,50,0,
16,0,1,0,0,0,
70,16,16,0,0,0,
0,0,70,128,32,0,
1,0,0,0,0,0,
0,0,26,0,0,5,
50,0,16,0,1,0,
0,0,70,0,16,0,
1,0,0,0,56,0,
0,10,114,0,16,0,
2,0,0,0,22,4,
16,0,1,0,0,0,
2,64,0,0,0,0,
64,64,0,0,64,64,
0,0,64,64,0,0,
0,0,65,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,0,0,
0,10,50,0,16,0,
3,0,0,0,38,10,
16,0,2,0,0,0,
2,64,0,0,0,0,
128,191,0,0,128,191,
0,0,0,0,0,0,
0,0,14,0,0,8,
18,0,16,0,4,0,
0,0,10,0,16,0,
3,0,0,0,10,128,
32,0,1,0,0,0,
0,0,0,0,54,0,
0,5,34,0,16,0,
4,0,0,0,1,64,
0,0,0,0,0,0,
0,0,0,7,194,0,
16,0,1,0,0,0,
6,4,16,0,4,0,
0,0,6,20,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,242,0,
16,0,4,0,0,0,
230,10,16,0,1,0,
0,0,70,126,16,0,
1,0,0,0,0,96,
16,0,1,0,0,0,
54,0,0,5,66,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
0,0,14,0,0,8,
194,0,16,0,1,0,
0,0,166,6,16,0,
3,0,0,0,6,132,
32,0,1,0,0,0,
0,0,0,0,0,0,
0,7,194,0,16,0,
1,0,0,0,166,14,
16,0,1,0,0,0,
6,20,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,242,0,16,0,
3,0,0,0,230,10,
16,0,1,0,0,0,
70,126,16,0,1,0,
0,0,0,96,16,0,
1,0,0,0,50,0,
0,15,242,0,16,0,
5,0,0,0,70,14,
16,0,0,0,0,0,
2,64,0,0,0,0,
160,66,0,0,160,66,
0,0,160,66,0,0,
160,66,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,63,
0,0,0,63,56,0,
0,10,242,0,16,0,
6,0,0,0,70,14,
16,0,5,0,0,0,
2,64,0,0,57,142,
227,61,57,142,227,61,
57,142,227,61,57,142,
227,61,65,0,0,5,
242,0,16,0,6,0,
0,0,70,14,16,0,
6,0,0,0,50,0,
0,13,242,0,16,0,
5,0,0,0,70,14,
16,128,65,0,0,0,
6,0,0,0,2,64,
0,0,0,0,16,65,
0,0,16,65,0,0,
16,65,0,0,16,65,
70,14,16,0,5,0,
0,0,65,0,0,5,
242,0,16,0,5,0,
0,0,70,14,16,0,
5,0,0,0,50,0,
0,15,242,0,16,0,
6,0,0,0,70,14,
16,0,4,0,0,0,
2,64,0,0,0,0,
160,66,0,0,160,66,
0,0,160,66,0,0,
160,66,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,63,
0,0,0,63,56,0,
0,10,242,0,16,0,
7,0,0,0,70,14,
16,0,6,0,0,0,
2,64,0,0,57,142,
227,61,57,142,227,61,
57,142,227,61,57,142,
227,61,65,0,0,5,
242,0,16,0,7,0,
0,0,70,14,16,0,
7,0,0,0,50,0,
0,13,242,0,16,0,
6,0,0,0,70,14,
16,128,65,0,0,0,
7,0,0,0,2,64,
0,0,0,0,16,65,
0,0,16,65,0,0,
16,65,0,0,16,65,
70,14,16,0,6,0,
0,0,65,0,0,5,
242,0,16,0,6,0,
0,0,198,9,16,0,
6,0,0,0,50,0,
0,15,242,0,16,0,
7,0,0,0,70,14,
16,0,3,0,0,0,
2,64,0,0,0,0,
160,66,0,0,160,66,
0,0,160,66,0,0,
160,66,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,63,
0,0,0,63,56,0,
0,10,242,0,16,0,
8,0,0,0,70,14,
16,0,7,0,0,0,
2,64,0,0,57,142,
227,61,57,142,227,61,
57,142,227,61,57,142,
227,61,65,0,0,5,
242,0,16,0,8,0,
0,0,70,14,16,0,
8,0,0,0,50,0,
0,13,242,0,16,0,
7,0,0,0,70,14,
16,128,65,0,0,0,
8,0,0,0,2,64,
0,0,0,0,16,65,
0,0,16,65,0,0,
16,65,0,0,16,65,
70,14,16,0,7,0,
0,0,65,0,0,5,
242,0,16,0,7,0,
0,0,70,14,16,0,
7,0,0,0,50,0,
0,15,242,0,16,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
2,64,0,0,227,56,
14,65,227,56,14,65,
227,56,14,65,227,56,
14,65,2,64,0,0,
164,141,99,61,164,141,
99,61,164,141,99,61,
164,141,99,61,56,0,
0,10,242,0,16,0,
8,0,0,0,70,14,
16,0,0,0,0,0,
2,64,0,0,57,142,
227,61,57,142,227,61,
57,142,227,61,57,142,
227,61,65,0,0,5,
242,0,16,0,8,0,
0,0,70,14,16,0,
8,0,0,0,50,0,
0,13,242,0,16,0,
0,0,0,0,70,14,
16,128,65,0,0,0,
8,0,0,0,2,64,
0,0,0,0,16,65,
0,0,16,65,0,0,
16,65,0,0,16,65,
70,14,16,0,0,0,
0,0,65,0,0,5,
242,0,16,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,15,194,0,16,0,
1,0,0,0,6,8,
16,0,3,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
227,56,14,65,227,56,
14,65,2,64,0,0,
0,0,0,0,0,0,
0,0,164,141,99,61,
164,141,99,61,56,0,
0,10,50,0,16,0,
3,0,0,0,230,10,
16,0,1,0,0,0,
2,64,0,0,57,142,
227,61,57,142,227,61,
0,0,0,0,0,0,
0,0,65,0,0,5,
50,0,16,0,3,0,
0,0,70,0,16,0,
3,0,0,0,50,0,
0,13,194,0,16,0,
1,0,0,0,6,4,
16,128,65,0,0,0,
3,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
16,65,0,0,16,65,
166,14,16,0,1,0,
0,0,65,0,0,5,
82,0,16,0,3,0,
0,0,246,14,16,0,
1,0,0,0,24,0,
0,7,66,0,16,0,
1,0,0,0,10,0,
16,0,2,0,0,0,
1,64,0,0,0,0,
0,0,31,0,4,3,
42,0,16,0,1,0,
0,0,24,0,0,10,
194,0,16,0,1,0,
0,0,166,10,16,0,
2,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,128,63,
54,0,0,5,34,0,
16,0,3,0,0,0,
10,0,16,0,0,0,
0,0,54,0,0,5,
130,0,16,0,3,0,
0,0,1,64,0,0,
0,0,0,0,54,0,
0,5,18,0,16,0,
7,0,0,0,26,0,
16,0,5,0,0,0,
54,0,0,5,34,0,
16,0,7,0,0,0,
10,0,16,0,6,0,
0,0,55,0,0,9,
114,0,16,0,8,0,
0,0,246,15,16,0,
1,0,0,0,214,4,
16,0,3,0,0,0,
70,2,16,0,7,0,
0,0,54,0,0,5,
18,0,16,0,7,0,
0,0,10,0,16,0,
5,0,0,0,54,0,
0,5,34,0,16,0,
7,0,0,0,42,0,
16,0,6,0,0,0,
55,0,0,9,114,0,
16,0,8,0,0,0,
166,10,16,0,1,0,
0,0,70,3,16,0,
7,0,0,0,70,2,
16,0,8,0,0,0,
18,0,0,1,50,0,
0,15,194,0,16,0,
1,0,0,0,86,13,
16,0,4,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
227,56,14,65,227,56,
14,65,2,64,0,0,
0,0,0,0,0,0,
0,0,164,141,99,61,
164,141,99,61,56,0,
0,10,50,0,16,0,
4,0,0,0,230,10,
16,0,1,0,0,0,
2,64,0,0,57,142,
227,61,57,142,227,61,
0,0,0,0,0,0,
0,0,65,0,0,5,
50,0,16,0,4,0,
0,0,70,0,16,0,
4,0,0,0,50,0,
0,13,194,0,16,0,
1,0,0,0,6,4,
16,128,65,0,0,0,
4,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
16,65,0,0,16,65,
166,14,16,0,1,0,
0,0,65,0,0,5,
50,0,16,0,4,0,
0,0,182,15,16,0,
1,0,0,0,24,0,
0,10,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
128,63,0,0,0,0,
0,0,128,63,0,0,
0,0,54,0,0,5,
130,0,16,0,4,0,
0,0,26,0,16,0,
0,0,0,0,54,0,
0,5,66,0,16,0,
4,0,0,0,1,64,
0,0,0,0,0,0,
55,0,0,12,114,0,
16,0,9,0,0,0,
166,10,16,0,2,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,54,14,
16,0,4,0,0,0,
54,0,0,5,18,0,
16,0,4,0,0,0,
58,0,16,0,0,0,
0,0,55,0,0,9,
178,0,16,0,0,0,
0,0,86,5,16,0,
2,0,0,0,70,8,
16,0,4,0,0,0,
70,8,16,0,9,0,
0,0,54,0,0,5,
18,0,16,0,3,0,
0,0,42,0,16,0,
0,0,0,0,54,0,
0,5,34,0,16,0,
3,0,0,0,1,64,
0,0,0,0,0,0,
54,0,0,5,18,0,
16,0,6,0,0,0,
42,0,16,0,5,0,
0,0,54,0,0,5,
66,0,16,0,6,0,
0,0,26,0,16,0,
7,0,0,0,55,0,
0,9,114,0,16,0,
3,0,0,0,166,10,
16,0,2,0,0,0,
70,2,16,0,3,0,
0,0,70,2,16,0,
6,0,0,0,54,0,
0,5,34,0,16,0,
7,0,0,0,58,0,
16,0,5,0,0,0,
54,0,0,5,66,0,
16,0,7,0,0,0,
58,0,16,0,6,0,
0,0,55,0,0,9,
226,0,16,0,2,0,
0,0,86,5,16,0,
2,0,0,0,86,2,
16,0,7,0,0,0,
6,9,16,0,3,0,
0,0,55,0,0,9,
114,0,16,0,8,0,
0,0,6,0,16,0,
2,0,0,0,70,3,
16,0,0,0,0,0,
150,7,16,0,2,0,
0,0,21,0,0,1,
69,0,0,140,1,0,
0,128,194,0,0,128,
67,85,21,0,114,0,
16,0,0,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,224,
1,128,194,0,0,128,
67,85,21,0,114,0,
16,0,2,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,192,
1,128,194,0,0,128,
67,85,21,0,114,0,
16,0,3,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,32,
0,128,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,64,
0,128,194,0,0,128,
67,85,21,0,114,0,
16,0,5,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,30,
0,128,194,0,0,128,
67,85,21,0,114,0,
16,0,6,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,28,
0,128,194,0,0,128,
67,85,21,0,114,0,
16,0,7,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,2,
0,128,194,0,0,128,
67,85,21,0,114,0,
16,0,9,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,140,1,4,
0,128,194,0,0,128,
67,85,21,0,114,0,
16,0,10,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
24,0,0,10,242,0,
16,0,11,0,0,0,
6,0,16,0,8,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
0,64,0,0,64,64,
0,0,128,64,24,0,
0,10,242,0,16,0,
12,0,0,0,6,4,
16,0,8,0,0,0,
2,64,0,0,0,0,
160,64,0,0,192,64,
0,0,224,64,0,0,
0,0,55,0,0,9,
114,0,16,0,13,0,
0,0,166,10,16,0,
12,0,0,0,70,2,
16,0,4,0,0,0,
70,2,16,0,5,0,
0,0,55,0,0,9,
114,0,16,0,13,0,
0,0,86,5,16,0,
12,0,0,0,70,2,
16,0,3,0,0,0,
70,2,16,0,13,0,
0,0,55,0,0,9,
114,0,16,0,12,0,
0,0,6,0,16,0,
12,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,13,0,
0,0,55,0,0,9,
114,0,16,0,12,0,
0,0,246,15,16,0,
11,0,0,0,70,2,
16,0,10,0,0,0,
70,2,16,0,12,0,
0,0,55,0,0,9,
114,0,16,0,12,0,
0,0,166,10,16,0,
11,0,0,0,70,2,
16,0,9,0,0,0,
70,2,16,0,12,0,
0,0,55,0,0,9,
226,0,16,0,11,0,
0,0,86,5,16,0,
11,0,0,0,6,9,
16,0,7,0,0,0,
6,9,16,0,12,0,
0,0,55,0,0,9,
114,0,16,0,11,0,
0,0,6,0,16,0,
11,0,0,0,70,2,
16,0,6,0,0,0,
150,7,16,0,11,0,
0,0,50,0,0,15,
50,0,16,0,1,0,
0,0,70,0,16,0,
1,0,0,0,2,64,
0,0,0,0,0,64,
0,0,0,64,0,0,
0,0,0,0,0,0,
2,64,0,0,0,0,
128,191,0,0,128,191,
0,0,0,0,0,0,
0,0,1,0,0,7,
130,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,58,0,
16,0,12,0,0,0,
24,0,0,7,18,0,
16,0,1,0,0,0,
42,0,16,0,8,0,
0,0,1,64,0,0,
0,0,0,0,1,0,
0,7,18,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,0,0,0,8,
226,0,16,0,1,0,
0,0,6,9,16,0,
6,0,0,0,6,9,
16,128,65,0,0,0,
7,0,0,0,0,0,
0,8,114,0,16,0,
7,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,128,65,0,
0,0,6,0,0,0,
0,0,0,8,226,0,
16,0,8,0,0,0,
6,9,16,128,65,0,
0,0,0,0,0,0,
6,9,16,0,9,0,
0,0,0,0,0,8,
114,0,16,0,10,0,
0,0,70,2,16,128,
65,0,0,0,9,0,
0,0,70,2,16,0,
10,0,0,0,29,0,
0,10,114,0,16,0,
12,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,63,0,0,0,0,
70,2,16,0,0,0,
0,0,1,0,0,10,
114,0,16,0,12,0,
0,0,70,2,16,0,
12,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,0,0,
50,0,0,15,114,0,
16,0,13,0,0,0,
70,2,16,0,0,0,
0,0,2,64,0,0,
0,0,0,192,0,0,
0,192,0,0,0,192,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,0,0,
50,0,0,9,114,0,
16,0,12,0,0,0,
70,2,16,0,12,0,
0,0,70,2,16,0,
13,0,0,0,70,2,
16,0,0,0,0,0,
51,0,0,9,114,0,
16,0,13,0,0,0,
70,2,16,128,129,0,
0,0,7,0,0,0,
150,7,16,128,129,0,
0,0,8,0,0,0,
51,0,0,7,114,0,
16,0,13,0,0,0,
70,2,16,0,12,0,
0,0,70,2,16,0,
13,0,0,0,56,0,
0,8,114,0,16,0,
13,0,0,0,70,2,
16,0,13,0,0,0,
6,128,32,0,1,0,
0,0,1,0,0,0,
0,0,0,7,114,0,
16,0,7,0,0,0,
70,2,16,0,7,0,
0,0,150,7,16,0,
8,0,0,0,0,0,
0,7,226,0,16,0,
1,0,0,0,86,14,
16,0,1,0,0,0,
6,9,16,0,10,0,
0,0,56,0,0,10,
226,0,16,0,1,0,
0,0,86,14,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,64,64,0,0,
64,64,0,0,64,64,
50,0,0,13,226,0,
16,0,1,0,0,0,
6,9,16,0,7,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
224,64,0,0,224,64,
0,0,224,64,86,14,
16,128,65,0,0,0,
1,0,0,0,56,0,
0,10,226,0,16,0,
1,0,0,0,86,14,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,128,61,
0,0,128,61,0,0,
128,61,52,0,0,8,
226,0,16,0,1,0,
0,0,6,9,16,128,
65,0,0,0,13,0,
0,0,86,14,16,0,
1,0,0,0,51,0,
0,7,226,0,16,0,
1,0,0,0,6,9,
16,0,13,0,0,0,
86,14,16,0,1,0,
0,0,0,0,0,8,
114,0,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,128,65,0,0,0,
3,0,0,0,0,0,
0,8,114,0,16,0,
7,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,128,65,0,
0,0,2,0,0,0,
0,0,0,8,226,0,
16,0,8,0,0,0,
6,9,16,128,65,0,
0,0,0,0,0,0,
6,9,16,0,4,0,
0,0,0,0,0,8,
114,0,16,0,5,0,
0,0,70,2,16,128,
65,0,0,0,4,0,
0,0,70,2,16,0,
5,0,0,0,51,0,
0,9,114,0,16,0,
10,0,0,0,70,2,
16,128,129,0,0,0,
7,0,0,0,150,7,
16,128,129,0,0,0,
8,0,0,0,51,0,
0,7,114,0,16,0,
10,0,0,0,70,2,
16,0,10,0,0,0,
70,2,16,0,12,0,
0,0,56,0,0,8,
114,0,16,0,10,0,
0,0,70,2,16,0,
10,0,0,0,6,128,
32,0,1,0,0,0,
1,0,0,0,0,0,
0,7,114,0,16,0,
7,0,0,0,70,2,
16,0,7,0,0,0,
150,7,16,0,8,0,
0,0,0,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,5,0,0,0,
56,0,0,10,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,2,64,0,0,
0,0,64,64,0,0,
64,64,0,0,64,64,
0,0,0,0,50,0,
0,13,114,0,16,0,
3,0,0,0,70,2,
16,0,7,0,0,0,
2,64,0,0,0,0,
224,64,0,0,224,64,
0,0,224,64,0,0,
0,0,70,2,16,128,
65,0,0,0,3,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,0,0,128,61,
0,0,128,61,0,0,
128,61,0,0,0,0,
52,0,0,8,114,0,
16,0,3,0,0,0,
70,2,16,128,65,0,
0,0,10,0,0,0,
70,2,16,0,3,0,
0,0,51,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
10,0,0,0,70,2,
16,0,3,0,0,0,
51,0,0,7,114,0,
16,0,5,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
6,0,0,0,51,0,
0,7,114,0,16,0,
5,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,5,0,
0,0,51,0,0,7,
114,0,16,0,5,0,
0,0,70,2,16,0,
9,0,0,0,70,2,
16,0,5,0,0,0,
51,0,0,7,114,0,
16,0,5,0,0,0,
70,2,16,0,4,0,
0,0,70,2,16,0,
5,0,0,0,52,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,6,0,
0,0,52,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
0,0,0,0,70,2,
16,0,2,0,0,0,
52,0,0,7,114,0,
16,0,2,0,0,0,
70,2,16,0,9,0,
0,0,70,2,16,0,
2,0,0,0,52,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,4,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,9,
114,0,16,0,0,0,
0,0,150,7,16,0,
1,0,0,0,246,15,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,50,0,0,9,
114,0,16,0,0,0,
0,0,70,2,16,0,
3,0,0,0,6,0,
16,0,1,0,0,0,
70,2,16,0,0,0,
0,0,52,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
5,0,0,0,70,2,
16,0,0,0,0,0,
51,0,0,7,114,0,
16,0,0,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
0,0,0,0,57,0,
0,7,130,0,16,0,
0,0,0,0,10,0,
16,0,8,0,0,0,
1,64,0,0,0,0,
0,0,55,0,0,9,
114,32,16,0,0,0,
0,0,246,15,16,0,
0,0,0,0,70,2,
16,0,11,0,0,0,
70,2,16,0,0,0,
0,0,54,0,0,5,
130,32,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,142,0,
0,0,14,0,0,0,
0,0,0,0,2,0,
0,0,90,0,0,0,
0,0,0,0,3,0,
0,0,2,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
12,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,18,0,0,0,
15,0,0,0,14,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class ScalefxShadersScalefxPass4HybridShaderDef : public ShaderDef
{
public:
	ScalefxShadersScalefxPass4HybridShaderDef() : ShaderDef{}
	{
		Name = "scalefx-pass4-hybrid";
		VertexByteCode = RetroArchScalefxShadersScalefxPass4HybridShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchScalefxShadersScalefxPass4HybridShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchScalefxShadersScalefxPass4HybridShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchScalefxShadersScalefxPass4HybridShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("SFX_RAA", -1, 16, 4, 0.000000f, 10.000000f, 2.000000f, 0.050000f, "ScaleFX rAA Sharpness"));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Samplers.push_back(ShaderSampler("Source", 1));
		Samplers.push_back(ShaderSampler("refpass", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
