/*
ShaderGlass shader blurs\smart-blur imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/blurs/smart-blur.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


Hyllian Smart-Blur Shader

Copyright (C) 2011-2020 Hyllian - sergiogdb@gmail.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

 Below the thresholds, blur is applied for each color channel.
 Threshold is the max color differency among the eight pixel neighbors from central pixel.

A  B  C
D  E  F
G  H  I


*/

#pragma once

namespace RetroArchBlursSmartBlurShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,47,220,
81,21,182,189,252,149,
139,161,55,52,159,231,
191,80,1,0,0,0,
140,7,0,0,5,0,
0,0,52,0,0,0,
236,3,0,0,56,4,
0,0,216,4,0,0,
240,6,0,0,82,68,
69,70,176,3,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
135,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,8,0,0,0,
24,1,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,88,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,116,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,152,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
116,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
172,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,116,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,190,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,216,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,252,2,0,0,
52,0,0,0,4,0,
0,0,0,0,0,0,
24,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
60,3,0,0,56,0,
0,0,4,0,0,0,
0,0,0,0,24,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,84,3,
0,0,60,0,0,0,
4,0,0,0,0,0,
0,0,24,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,110,3,0,0,
64,0,0,0,4,0,
0,0,0,0,0,0,
24,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,83,111,117,114,99,
101,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
106,2,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
171,171,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,208,2,
0,0,112,97,114,97,
109,115,95,83,66,95,
66,76,85,82,95,76,
69,86,69,76,0,102,
108,111,97,116,0,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,17,3,0,0,
112,97,114,97,109,115,
95,83,66,95,82,69,
68,95,84,72,82,69,
83,72,79,76,68,0,
112,97,114,97,109,115,
95,83,66,95,71,82,
69,69,78,95,84,72,
82,69,83,72,79,76,
68,0,112,97,114,97,
109,115,95,83,66,95,
66,76,85,69,95,84,
72,82,69,83,72,79,
76,68,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,73,83,71,78,
68,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,15,0,0,
56,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,152,0,
0,0,5,0,0,0,
8,0,0,0,128,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,12,0,0,128,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
15,0,0,0,128,0,
0,0,2,0,0,0,
0,0,0,0,3,0,
0,0,2,0,0,0,
15,0,0,0,128,0,
0,0,3,0,0,0,
0,0,0,0,3,0,
0,0,3,0,0,0,
15,0,0,0,137,0,
0,0,0,0,0,0,
1,0,0,0,3,0,
0,0,4,0,0,0,
15,0,0,0,84,69,
88,67,79,79,82,68,
0,83,86,95,80,111,
115,105,116,105,111,110,
0,171,171,171,83,72,
69,88,16,2,0,0,
80,0,1,0,132,0,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,0,0,0,0,
4,0,0,0,89,0,
0,4,70,142,32,0,
1,0,0,0,1,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,1,0,
0,0,101,0,0,3,
242,32,16,0,2,0,
0,0,101,0,0,3,
242,32,16,0,3,0,
0,0,103,0,0,4,
242,32,16,0,4,0,
0,0,1,0,0,0,
104,0,0,2,1,0,
0,0,54,0,0,5,
50,32,16,0,0,0,
0,0,70,16,16,0,
1,0,0,0,56,0,
0,11,210,0,16,0,
0,0,0,0,2,64,
0,0,0,0,128,191,
0,0,0,0,0,0,
128,63,0,0,128,191,
166,142,32,0,1,0,
0,0,0,0,0,0,
54,0,0,5,34,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,0,0,0,7,
242,32,16,0,1,0,
0,0,70,14,16,0,
0,0,0,0,6,20,
16,0,1,0,0,0,
0,0,0,7,242,32,
16,0,2,0,0,0,
70,6,16,0,0,0,
0,0,6,20,16,0,
1,0,0,0,56,0,
0,11,210,0,16,0,
0,0,0,0,2,64,
0,0,0,0,128,191,
0,0,0,0,0,0,
128,63,0,0,128,63,
166,142,32,0,1,0,
0,0,0,0,0,0,
54,0,0,5,34,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,0,0,0,7,
242,32,16,0,3,0,
0,0,70,14,16,0,
0,0,0,0,6,20,
16,0,1,0,0,0,
56,0,0,8,242,0,
16,0,0,0,0,0,
86,21,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,1,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,6,16,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
166,26,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,2,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,32,16,0,
4,0,0,0,246,31,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,3,0,0,0,
70,14,16,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,13,0,0,0,
1,0,0,0,0,0,
0,0,7,0,0,0,
9,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,45,46,
34,246,27,253,220,85,
75,228,126,230,79,209,
39,104,1,0,0,0,
20,14,0,0,5,0,
0,0,52,0,0,0,
164,3,0,0,32,4,
0,0,84,4,0,0,
120,13,0,0,82,68,
69,70,104,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
63,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,8,0,0,0,
208,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,16,2,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,44,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,80,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
44,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
100,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,44,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,118,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,144,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,180,2,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
208,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
244,2,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,208,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,12,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,208,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,38,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
208,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,83,111,117,114,99,
101,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
34,2,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
171,171,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,136,2,
0,0,112,97,114,97,
109,115,95,83,66,95,
66,76,85,82,95,76,
69,86,69,76,0,102,
108,111,97,116,0,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,201,2,0,0,
112,97,114,97,109,115,
95,83,66,95,82,69,
68,95,84,72,82,69,
83,72,79,76,68,0,
112,97,114,97,109,115,
95,83,66,95,71,82,
69,69,78,95,84,72,
82,69,83,72,79,76,
68,0,112,97,114,97,
109,115,95,83,66,95,
66,76,85,69,95,84,
72,82,69,83,72,79,
76,68,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,73,83,71,78,
116,0,0,0,4,0,
0,0,8,0,0,0,
104,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,0,0,0,
104,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,15,15,0,0,
104,0,0,0,2,0,
0,0,0,0,0,0,
3,0,0,0,2,0,
0,0,15,15,0,0,
104,0,0,0,3,0,
0,0,0,0,0,0,
3,0,0,0,3,0,
0,0,15,15,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,28,9,0,0,
80,0,0,0,71,2,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
5,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
242,16,16,0,1,0,
0,0,98,16,0,3,
242,16,16,0,2,0,
0,0,98,16,0,3,
242,16,16,0,3,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
8,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,0,0,0,0,
230,26,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,1,0,
0,0,214,21,16,0,
2,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,0,0,0,8,
114,0,16,0,2,0,
0,0,70,2,16,128,
65,0,0,0,0,0,
0,0,70,2,16,0,
1,0,0,0,49,0,
0,9,50,0,16,0,
2,0,0,0,70,0,
16,128,129,0,0,0,
2,0,0,0,230,138,
32,0,1,0,0,0,
3,0,0,0,49,0,
0,9,130,0,16,0,
0,0,0,0,42,0,
16,128,129,0,0,0,
2,0,0,0,10,128,
32,0,1,0,0,0,
4,0,0,0,1,0,
0,7,130,0,16,0,
1,0,0,0,26,0,
16,0,2,0,0,0,
10,0,16,0,2,0,
0,0,1,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,214,21,16,0,
3,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,0,0,0,8,
114,0,16,0,3,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,128,65,0,0,0,
2,0,0,0,49,0,
0,9,50,0,16,0,
3,0,0,0,70,0,
16,128,129,0,0,0,
3,0,0,0,230,138,
32,0,1,0,0,0,
3,0,0,0,49,0,
0,9,130,0,16,0,
1,0,0,0,42,0,
16,128,129,0,0,0,
3,0,0,0,10,128,
32,0,1,0,0,0,
4,0,0,0,1,0,
0,7,130,0,16,0,
2,0,0,0,26,0,
16,0,3,0,0,0,
10,0,16,0,3,0,
0,0,1,0,0,7,
130,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,58,0,
16,0,2,0,0,0,
1,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,58,0,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,3,0,0,0,
230,26,16,0,3,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
0,0,0,8,114,0,
16,0,4,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,128,
65,0,0,0,3,0,
0,0,49,0,0,9,
50,0,16,0,4,0,
0,0,70,0,16,128,
129,0,0,0,4,0,
0,0,230,138,32,0,
1,0,0,0,3,0,
0,0,49,0,0,9,
130,0,16,0,1,0,
0,0,42,0,16,128,
129,0,0,0,4,0,
0,0,10,128,32,0,
1,0,0,0,4,0,
0,0,1,0,0,7,
130,0,16,0,2,0,
0,0,26,0,16,0,
4,0,0,0,10,0,
16,0,4,0,0,0,
1,0,0,7,130,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,58,0,16,0,
2,0,0,0,1,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
58,0,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
4,0,0,0,214,21,
16,0,1,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,0,0,
0,8,114,0,16,0,
5,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,128,65,0,
0,0,4,0,0,0,
49,0,0,9,50,0,
16,0,5,0,0,0,
70,0,16,128,129,0,
0,0,5,0,0,0,
230,138,32,0,1,0,
0,0,3,0,0,0,
49,0,0,9,130,0,
16,0,1,0,0,0,
42,0,16,128,129,0,
0,0,5,0,0,0,
10,128,32,0,1,0,
0,0,4,0,0,0,
1,0,0,7,130,0,
16,0,2,0,0,0,
26,0,16,0,5,0,
0,0,10,0,16,0,
5,0,0,0,1,0,
0,7,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
58,0,16,0,2,0,
0,0,1,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,5,0,
0,0,230,26,16,0,
1,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,0,0,0,8,
114,0,16,0,6,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,128,65,0,0,0,
5,0,0,0,49,0,
0,9,50,0,16,0,
6,0,0,0,70,0,
16,128,129,0,0,0,
6,0,0,0,230,138,
32,0,1,0,0,0,
3,0,0,0,49,0,
0,9,130,0,16,0,
1,0,0,0,42,0,
16,128,129,0,0,0,
6,0,0,0,10,128,
32,0,1,0,0,0,
4,0,0,0,1,0,
0,7,130,0,16,0,
2,0,0,0,26,0,
16,0,6,0,0,0,
10,0,16,0,6,0,
0,0,1,0,0,7,
130,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,58,0,
16,0,2,0,0,0,
1,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,58,0,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,6,0,0,0,
198,16,16,0,1,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
0,0,0,8,114,0,
16,0,7,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,128,
65,0,0,0,6,0,
0,0,0,0,0,7,
114,0,16,0,5,0,
0,0,70,2,16,0,
5,0,0,0,70,2,
16,0,6,0,0,0,
49,0,0,9,50,0,
16,0,6,0,0,0,
70,0,16,128,129,0,
0,0,7,0,0,0,
230,138,32,0,1,0,
0,0,3,0,0,0,
49,0,0,9,130,0,
16,0,1,0,0,0,
42,0,16,128,129,0,
0,0,7,0,0,0,
10,128,32,0,1,0,
0,0,4,0,0,0,
1,0,0,7,130,0,
16,0,2,0,0,0,
26,0,16,0,6,0,
0,0,10,0,16,0,
6,0,0,0,1,0,
0,7,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
58,0,16,0,2,0,
0,0,1,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,6,0,
0,0,198,16,16,0,
2,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,0,0,0,8,
114,0,16,0,7,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,128,65,0,0,0,
6,0,0,0,0,0,
0,7,114,0,16,0,
5,0,0,0,70,2,
16,0,5,0,0,0,
70,2,16,0,6,0,
0,0,0,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,70,2,
16,0,5,0,0,0,
49,0,0,9,50,0,
16,0,5,0,0,0,
70,0,16,128,129,0,
0,0,7,0,0,0,
230,138,32,0,1,0,
0,0,3,0,0,0,
49,0,0,9,130,0,
16,0,1,0,0,0,
42,0,16,128,129,0,
0,0,7,0,0,0,
10,128,32,0,1,0,
0,0,4,0,0,0,
1,0,0,7,130,0,
16,0,2,0,0,0,
26,0,16,0,5,0,
0,0,10,0,16,0,
5,0,0,0,1,0,
0,7,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
58,0,16,0,2,0,
0,0,1,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,5,0,
0,0,198,16,16,0,
3,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,0,0,0,8,
114,0,16,0,6,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,128,65,0,0,0,
5,0,0,0,0,0,
0,7,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,5,0,
0,0,0,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,0,0,0,0,
0,0,0,7,114,0,
16,0,0,0,0,0,
70,2,16,0,4,0,
0,0,70,2,16,0,
0,0,0,0,0,0,
0,7,114,0,16,0,
0,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,0,0,
0,0,50,0,0,13,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,2,64,
0,0,0,0,0,62,
0,0,0,62,0,0,
0,62,0,0,0,0,
70,2,16,128,65,0,
0,0,1,0,0,0,
50,0,0,10,114,0,
16,0,0,0,0,0,
86,133,32,0,1,0,
0,0,3,0,0,0,
70,2,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,49,0,
0,9,50,0,16,0,
2,0,0,0,70,0,
16,128,129,0,0,0,
6,0,0,0,230,138,
32,0,1,0,0,0,
3,0,0,0,49,0,
0,9,130,0,16,0,
1,0,0,0,42,0,
16,128,129,0,0,0,
6,0,0,0,10,128,
32,0,1,0,0,0,
4,0,0,0,1,0,
0,7,18,0,16,0,
2,0,0,0,26,0,
16,0,2,0,0,0,
10,0,16,0,2,0,
0,0,1,0,0,7,
130,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,10,0,
16,0,2,0,0,0,
1,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,58,0,16,0,
1,0,0,0,55,0,
0,9,114,32,16,0,
0,0,0,0,246,15,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,54,0,
0,5,130,32,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
62,0,0,1,83,84,
65,84,148,0,0,0,
68,0,0,0,8,0,
0,0,0,0,0,0,
4,0,0,0,33,0,
0,0,0,0,0,0,
23,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,9,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class BlursSmartBlurShaderDef : public ShaderDef
{
public:
	BlursSmartBlurShaderDef() : ShaderDef{}
	{
		Name = "smart-blur";
		VertexByteCode = RetroArchBlursSmartBlurShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchBlursSmartBlurShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchBlursSmartBlurShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchBlursSmartBlurShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("SB_BLUR_LEVEL", -1, 52, 4, 0.000000f, 1.000000f, 0.660000f));
		Params.push_back(ShaderParam("SB_RED_THRESHOLD", -1, 56, 4, 0.000000f, 0.600000f, 0.200000f));
		Params.push_back(ShaderParam("SB_GREEN_THRESHOLD", -1, 60, 4, 0.000000f, 0.600000f, 0.200000f));
		Params.push_back(ShaderParam("SB_BLUE_THRESHOLD", -1, 64, 4, 0.000000f, 0.600000f, 0.200000f));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
