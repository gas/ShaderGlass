/*
ShaderGlass shader nedi-shaders\nedi-pass0 imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/nedi/shaders/nedi-pass0.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


NEDI Shader  -  pass0

// This file is a part of MPDN Extensions.
// https://github.com/zachsaw/MPDN_Extensions
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library.
//

Sources ported from this discussion thread:

http://forum.doom9.org/showthread.php?t=170727

Ported by Hyllian - 2015.

//#define offset 0.0
//Cramer's method

wind[1]              wind[2]
-3
-2             dir        wind[0]            2                 1
-1              4           4          4                             4
0            1   2       1   2
1              3           3                   3           3
2                                        1                       2
3


wind[1]              wind[2]
-3                                            3                3
-2             dir        wind[0]
-1            0   3        0   3      0                                1
0
1            2   1        2   1                  1        0
2
3                                        2                        2

//Define window and directions - original
//Initialization
//Calculate (local) autocorrelation coefficients
//Normalize
//Calculate a =  R^-1 . r
//Nomalize 'a' (prevents overshoot)
//Calculate result
//Skip pixels on wrong grid

*/

#pragma once

namespace RetroArchNediShadersNediPass0ShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,14,47,
213,78,221,130,191,191,
97,225,117,245,226,84,
11,43,1,0,0,0,
160,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
4,3,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
84,0,128,63,84,0,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,63,227,
60,113,131,87,105,137,
21,45,168,181,97,235,
101,146,1,0,0,0,
180,25,0,0,5,0,
0,0,52,0,0,0,
120,2,0,0,172,2,
0,0,224,2,0,0,
24,25,0,0,82,68,
69,70,60,2,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
20,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,4,0,0,0,
208,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,112,1,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,140,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,176,1,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
140,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
196,1,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,140,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,214,1,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,240,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,130,1,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
232,1,0,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,73,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,48,22,0,0,
80,0,0,0,140,5,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
1,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
16,0,0,0,14,0,
0,11,242,0,16,0,
0,0,0,0,2,64,
0,0,176,254,255,62,
176,254,255,62,176,254,
255,62,176,254,255,62,
70,132,32,0,1,0,
0,0,0,0,0,0,
50,0,0,13,162,0,
16,0,1,0,0,0,
246,143,32,0,1,0,
0,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,128,62,
0,0,0,0,0,0,
128,62,86,21,16,0,
0,0,0,0,54,0,
0,5,82,0,16,0,
1,0,0,0,6,16,
16,0,0,0,0,0,
50,0,0,12,242,0,
16,0,2,0,0,0,
230,14,16,0,0,0,
0,0,2,64,0,0,
0,0,160,192,0,0,
64,192,0,0,160,192,
0,0,128,63,230,14,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,3,0,
0,0,230,10,16,0,
2,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
2,0,0,0,70,0,
16,0,2,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,16,0,0,10,
34,0,16,0,2,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
50,0,0,12,242,0,
16,0,3,0,0,0,
230,14,16,0,0,0,
0,0,2,64,0,0,
0,0,64,192,0,0,
64,64,0,0,128,191,
0,0,64,192,230,14,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,4,0,
0,0,230,10,16,0,
3,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
3,0,0,0,70,0,
16,0,3,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,66,0,16,0,
2,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,16,0,0,10,
130,0,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
0,0,0,7,18,0,
16,0,4,0,0,0,
26,0,16,0,2,0,
0,0,58,0,16,0,
3,0,0,0,50,0,
0,12,242,0,16,0,
5,0,0,0,230,14,
16,0,0,0,0,0,
2,64,0,0,0,0,
160,64,0,0,64,64,
0,0,160,64,0,0,
128,191,230,14,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,6,0,0,0,
230,10,16,0,5,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,5,0,
0,0,70,0,16,0,
5,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
34,0,16,0,2,0,
0,0,70,2,16,0,
5,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
16,0,0,10,130,0,
16,0,2,0,0,0,
70,2,16,0,6,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,50,0,
0,12,242,0,16,0,
5,0,0,0,230,14,
16,0,0,0,0,0,
2,64,0,0,0,0,
64,192,0,0,128,191,
0,0,128,63,0,0,
64,64,230,14,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,6,0,0,0,
230,10,16,0,5,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,5,0,
0,0,70,0,16,0,
5,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
18,0,16,0,5,0,
0,0,70,2,16,0,
5,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
16,0,0,10,66,0,
16,0,3,0,0,0,
70,2,16,0,6,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,0,0,
0,7,34,0,16,0,
4,0,0,0,58,0,
16,0,2,0,0,0,
42,0,16,0,3,0,
0,0,50,0,0,12,
242,0,16,0,6,0,
0,0,230,14,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,160,64,0,0,
64,192,0,0,160,64,
230,14,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
7,0,0,0,70,0,
16,0,6,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,6,0,0,0,
230,10,16,0,6,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,130,0,
16,0,2,0,0,0,
70,2,16,0,6,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,16,0,
0,10,18,0,16,0,
6,0,0,0,70,2,
16,0,7,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,50,0,0,12,
242,0,16,0,7,0,
0,0,230,14,16,0,
0,0,0,0,2,64,
0,0,0,0,64,192,
0,0,64,192,0,0,
64,192,0,0,128,63,
230,14,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,226,0,16,0,
6,0,0,0,230,10,
16,0,7,0,0,0,
54,121,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,7,0,0,0,
70,0,16,0,7,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,18,0,
16,0,7,0,0,0,
70,2,16,0,7,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,16,0,
0,10,18,0,16,0,
3,0,0,0,150,7,
16,0,6,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
66,0,16,0,6,0,
0,0,10,0,16,0,
6,0,0,0,10,0,
16,0,3,0,0,0,
50,0,0,12,242,0,
16,0,8,0,0,0,
230,14,16,0,0,0,
0,0,2,64,0,0,
0,0,128,191,0,0,
160,192,0,0,64,64,
0,0,160,192,230,14,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
226,0,16,0,7,0,
0,0,70,0,16,0,
8,0,0,0,54,121,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
8,0,0,0,230,10,
16,0,8,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
8,0,0,0,70,2,
16,0,8,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,16,0,0,10,
34,0,16,0,7,0,
0,0,150,7,16,0,
7,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
50,0,0,12,242,0,
16,0,9,0,0,0,
230,14,16,0,0,0,
0,0,2,64,0,0,
0,0,128,191,0,0,
64,64,0,0,64,64,
0,0,128,191,230,14,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
226,0,16,0,8,0,
0,0,230,10,16,0,
9,0,0,0,54,121,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
9,0,0,0,70,0,
16,0,9,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,66,0,16,0,
5,0,0,0,70,2,
16,0,9,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,16,0,0,10,
34,0,16,0,3,0,
0,0,150,7,16,0,
8,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
0,0,0,7,130,0,
16,0,6,0,0,0,
26,0,16,0,3,0,
0,0,26,0,16,0,
7,0,0,0,0,0,
0,7,98,0,16,0,
7,0,0,0,166,11,
16,0,0,0,0,0,
166,11,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,226,0,16,0,
7,0,0,0,150,5,
16,0,7,0,0,0,
54,121,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,34,0,16,0,
9,0,0,0,150,7,
16,0,7,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
66,0,16,0,4,0,
0,0,58,0,16,0,
2,0,0,0,26,0,
16,0,9,0,0,0,
0,0,0,8,98,0,
16,0,8,0,0,0,
166,11,16,128,65,0,
0,0,0,0,0,0,
166,11,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,226,0,16,0,
8,0,0,0,150,5,
16,0,8,0,0,0,
54,121,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
9,0,0,0,150,7,
16,0,8,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
226,0,16,0,7,0,
0,0,86,14,16,0,
7,0,0,0,86,14,
16,0,8,0,0,0,
0,0,0,7,130,0,
16,0,4,0,0,0,
10,0,16,0,8,0,
0,0,10,0,16,0,
9,0,0,0,50,0,
0,12,242,0,16,0,
8,0,0,0,230,14,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,191,0,0,128,63,
0,0,128,63,0,0,
128,191,230,14,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,10,0,0,0,
70,0,16,0,8,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,8,0,
0,0,230,10,16,0,
8,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
66,0,16,0,9,0,
0,0,70,2,16,0,
10,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
0,0,0,7,114,0,
16,0,10,0,0,0,
70,2,16,0,8,0,
0,0,70,2,16,0,
10,0,0,0,16,0,
0,10,130,0,16,0,
9,0,0,0,70,2,
16,0,8,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
18,0,16,0,6,0,
0,0,10,0,16,0,
2,0,0,0,42,0,
16,0,9,0,0,0,
0,0,0,7,34,0,
16,0,6,0,0,0,
26,0,16,0,2,0,
0,0,58,0,16,0,
9,0,0,0,17,0,
0,7,34,0,16,0,
8,0,0,0,70,14,
16,0,6,0,0,0,
70,14,16,0,4,0,
0,0,50,0,0,12,
242,0,16,0,11,0,
0,0,230,14,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,64,192,0,0,
64,64,0,0,64,64,
230,14,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,178,0,16,0,
2,0,0,0,70,0,
16,0,11,0,0,0,
70,123,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,11,0,0,0,
230,10,16,0,11,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,130,0,
16,0,8,0,0,0,
70,2,16,0,11,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,0,0,
0,7,34,0,16,0,
11,0,0,0,58,0,
16,0,8,0,0,0,
10,0,16,0,9,0,
0,0,16,0,0,10,
130,0,16,0,5,0,
0,0,70,3,16,0,
2,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
0,0,0,7,50,0,
16,0,12,0,0,0,
70,0,16,0,3,0,
0,0,182,15,16,0,
5,0,0,0,50,0,
0,12,242,0,16,0,
13,0,0,0,230,14,
16,0,0,0,0,0,
2,64,0,0,0,0,
64,64,0,0,128,63,
0,0,64,64,0,0,
64,192,230,14,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,178,0,
16,0,2,0,0,0,
230,10,16,0,13,0,
0,0,70,123,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,13,0,
0,0,70,0,16,0,
13,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
34,0,16,0,5,0,
0,0,70,2,16,0,
13,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
16,0,0,10,18,0,
16,0,2,0,0,0,
70,3,16,0,2,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,0,0,
0,7,130,0,16,0,
12,0,0,0,10,0,
16,0,2,0,0,0,
42,0,16,0,9,0,
0,0,0,0,0,7,
66,0,16,0,12,0,
0,0,42,0,16,0,
2,0,0,0,58,0,
16,0,9,0,0,0,
56,0,0,10,242,0,
16,0,2,0,0,0,
70,14,16,0,12,0,
0,0,2,64,0,0,
0,0,128,64,0,0,
128,64,0,0,128,64,
0,0,128,64,0,0,
0,7,194,0,16,0,
11,0,0,0,166,14,
16,0,3,0,0,0,
6,4,16,0,5,0,
0,0,0,0,0,7,
18,0,16,0,11,0,
0,0,10,0,16,0,
7,0,0,0,26,0,
16,0,9,0,0,0,
17,0,0,7,34,0,
16,0,13,0,0,0,
70,14,16,0,11,0,
0,0,70,14,16,0,
2,0,0,0,17,0,
0,7,18,0,16,0,
8,0,0,0,70,14,
16,0,6,0,0,0,
70,14,16,0,6,0,
0,0,17,0,0,7,
34,0,16,0,6,0,
0,0,70,14,16,0,
5,0,0,0,70,14,
16,0,6,0,0,0,
56,0,0,10,242,0,
16,0,14,0,0,0,
70,14,16,0,11,0,
0,0,2,64,0,0,
0,0,128,64,0,0,
128,64,0,0,128,64,
0,0,128,64,17,0,
0,7,18,0,16,0,
13,0,0,0,70,14,
16,0,11,0,0,0,
70,14,16,0,14,0,
0,0,0,0,0,7,
194,0,16,0,6,0,
0,0,6,4,16,0,
8,0,0,0,6,4,
16,0,13,0,0,0,
50,0,0,12,242,0,
16,0,11,0,0,0,
230,14,16,0,0,0,
0,0,2,64,0,0,
0,0,160,192,0,0,
128,191,0,0,160,192,
0,0,64,64,230,14,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,13,0,
0,0,70,0,16,0,
11,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
11,0,0,0,230,10,
16,0,11,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
7,0,0,0,70,2,
16,0,11,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
18,0,16,0,11,0,
0,0,10,0,16,0,
9,0,0,0,10,0,
16,0,7,0,0,0,
16,0,0,10,18,0,
16,0,7,0,0,0,
70,2,16,0,13,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,0,0,
0,7,18,0,16,0,
13,0,0,0,42,0,
16,0,5,0,0,0,
10,0,16,0,7,0,
0,0,17,0,0,7,
18,0,16,0,6,0,
0,0,70,14,16,0,
5,0,0,0,70,14,
16,0,4,0,0,0,
17,0,0,7,66,0,
16,0,8,0,0,0,
70,14,16,0,4,0,
0,0,70,14,16,0,
4,0,0,0,50,0,
0,12,242,0,16,0,
4,0,0,0,230,14,
16,0,0,0,0,0,
2,64,0,0,0,0,
160,64,0,0,128,63,
0,0,160,64,0,0,
64,192,230,14,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,15,0,0,0,
70,0,16,0,4,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,4,0,
0,0,230,10,16,0,
4,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
18,0,16,0,4,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
0,0,0,7,34,0,
16,0,11,0,0,0,
10,0,16,0,4,0,
0,0,26,0,16,0,
9,0,0,0,16,0,
0,10,18,0,16,0,
4,0,0,0,70,2,
16,0,15,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
34,0,16,0,13,0,
0,0,10,0,16,0,
4,0,0,0,58,0,
16,0,5,0,0,0,
50,0,0,12,242,0,
16,0,4,0,0,0,
230,14,16,0,0,0,
0,0,2,64,0,0,
0,0,64,64,0,0,
160,64,0,0,128,191,
0,0,160,64,230,14,
16,0,1,0,0,0,
50,0,0,12,242,0,
16,0,0,0,0,0,
70,14,16,0,0,0,
0,0,2,64,0,0,
0,0,64,192,0,0,
160,192,0,0,128,63,
0,0,160,192,70,14,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
242,0,16,0,15,0,
0,0,230,10,16,0,
1,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,56,0,0,8,
18,0,16,0,1,0,
0,0,42,0,16,0,
1,0,0,0,10,128,
32,0,1,0,0,0,
0,0,0,0,26,0,
0,5,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
49,0,0,7,18,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
222,255,255,62,69,0,
0,139,194,0,0,128,
67,85,21,0,226,0,
16,0,1,0,0,0,
230,10,16,0,4,0,
0,0,54,121,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,4,0,
0,0,70,0,16,0,
4,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
18,0,16,0,4,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
0,0,0,7,66,0,
16,0,13,0,0,0,
10,0,16,0,4,0,
0,0,42,0,16,0,
9,0,0,0,16,0,
0,10,34,0,16,0,
1,0,0,0,150,7,
16,0,1,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
66,0,16,0,11,0,
0,0,26,0,16,0,
5,0,0,0,26,0,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
226,0,16,0,1,0,
0,0,230,10,16,0,
0,0,0,0,54,121,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
130,0,16,0,13,0,
0,0,58,0,16,0,
9,0,0,0,10,0,
16,0,0,0,0,0,
16,0,0,10,18,0,
16,0,0,0,0,0,
150,7,16,0,1,0,
0,0,2,64,0,0,
208,179,89,62,89,23,
55,63,152,221,147,61,
0,0,0,0,0,0,
0,7,130,0,16,0,
11,0,0,0,10,0,
16,0,0,0,0,0,
10,0,16,0,5,0,
0,0,17,0,0,7,
34,0,16,0,0,0,
0,0,70,14,16,0,
13,0,0,0,70,14,
16,0,11,0,0,0,
17,0,0,7,18,0,
16,0,0,0,0,0,
70,14,16,0,13,0,
0,0,70,14,16,0,
13,0,0,0,17,0,
0,7,34,0,16,0,
4,0,0,0,70,14,
16,0,3,0,0,0,
70,14,16,0,13,0,
0,0,17,0,0,7,
18,0,16,0,4,0,
0,0,70,14,16,0,
3,0,0,0,70,14,
16,0,11,0,0,0,
17,0,0,7,66,0,
16,0,0,0,0,0,
70,14,16,0,11,0,
0,0,70,14,16,0,
11,0,0,0,0,0,
0,7,50,0,16,0,
3,0,0,0,70,0,
16,0,0,0,0,0,
230,10,16,0,6,0,
0,0,17,0,0,7,
130,0,16,0,1,0,
0,0,70,14,16,0,
12,0,0,0,70,14,
16,0,2,0,0,0,
17,0,0,7,66,0,
16,0,1,0,0,0,
70,14,16,0,12,0,
0,0,70,14,16,0,
14,0,0,0,17,0,
0,7,34,0,16,0,
5,0,0,0,70,14,
16,0,9,0,0,0,
70,14,16,0,14,0,
0,0,17,0,0,7,
18,0,16,0,5,0,
0,0,70,14,16,0,
9,0,0,0,70,14,
16,0,2,0,0,0,
0,0,0,7,146,0,
16,0,0,0,0,0,
6,4,16,0,6,0,
0,0,6,4,16,0,
5,0,0,0,0,0,
0,7,146,0,16,0,
0,0,0,0,6,4,
16,0,4,0,0,0,
6,12,16,0,0,0,
0,0,56,0,0,10,
146,0,16,0,0,0,
0,0,6,12,16,0,
0,0,0,0,2,64,
0,0,171,170,42,61,
0,0,0,0,0,0,
0,0,171,170,42,61,
0,0,0,7,98,0,
16,0,1,0,0,0,
86,6,16,0,8,0,
0,0,166,11,16,0,
1,0,0,0,0,0,
0,7,194,0,16,0,
3,0,0,0,86,9,
16,0,0,0,0,0,
86,9,16,0,1,0,
0,0,56,0,0,10,
242,0,16,0,2,0,
0,0,70,14,16,0,
3,0,0,0,2,64,
0,0,171,170,42,61,
171,170,42,61,171,170,
42,61,171,170,42,61,
56,0,0,7,98,0,
16,0,0,0,0,0,
6,3,16,0,0,0,
0,0,166,9,16,0,
2,0,0,0,50,0,
0,10,50,0,16,0,
0,0,0,0,54,15,
16,0,0,0,0,0,
54,15,16,0,2,0,
0,0,150,5,16,128,
65,0,0,0,0,0,
0,0,56,0,0,7,
66,0,16,0,0,0,
0,0,26,0,16,0,
2,0,0,0,42,0,
16,0,2,0,0,0,
50,0,0,10,66,0,
16,0,0,0,0,0,
10,0,16,0,2,0,
0,0,58,0,16,0,
2,0,0,0,42,0,
16,128,65,0,0,0,
0,0,0,0,14,0,
0,7,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
166,10,16,0,0,0,
0,0,0,0,0,8,
18,0,16,0,0,0,
0,0,26,0,16,128,
65,0,0,0,0,0,
0,0,10,0,16,0,
0,0,0,0,52,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,191,51,0,0,7,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
50,0,0,15,50,0,
16,0,0,0,0,0,
6,0,16,0,0,0,
0,0,2,64,0,0,
229,242,255,62,229,242,
255,190,0,0,0,0,
0,0,0,0,2,64,
0,0,0,0,128,62,
0,0,128,62,0,0,
0,0,0,0,0,0,
56,0,0,7,226,0,
16,0,0,0,0,0,
6,9,16,0,10,0,
0,0,86,5,16,0,
0,0,0,0,50,0,
0,9,114,0,16,0,
0,0,0,0,6,0,
16,0,0,0,0,0,
150,7,16,0,7,0,
0,0,150,7,16,0,
0,0,0,0,54,0,
0,5,130,0,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
55,0,0,9,242,32,
16,0,0,0,0,0,
6,0,16,0,1,0,
0,0,70,14,16,0,
15,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
152,0,0,0,16,0,
0,0,0,0,0,0,
2,0,0,0,115,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,33,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,2,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class NediShadersNediPass0ShaderDef : public ShaderDef
{
public:
	NediShadersNediPass0ShaderDef() : ShaderDef{}
	{
		Name = "nedi-pass0";
		VertexByteCode = RetroArchNediShadersNediPass0ShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchNediShadersNediPass0ShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchNediShadersNediPass0ShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchNediShadersNediPass0ShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
