/*
ShaderGlass shader handheld-shaders\dot imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/master/handheld/shaders/dot.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.


Author: Themaister
License: Public domain


*/

#pragma once

namespace RetroArchHandheldShadersDotShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,89,51,
55,16,130,78,214,72,
12,12,37,12,49,75,
173,103,1,0,0,0,
92,7,0,0,5,0,
0,0,52,0,0,0,
28,2,0,0,104,2,
0,0,104,3,0,0,
192,6,0,0,82,68,
69,70,224,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
182,1,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,4,0,
0,0,120,0,0,0,
112,0,0,0,0,0,
0,0,0,0,0,0,
24,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,44,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,1,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,108,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,144,1,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
108,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
164,1,0,0,96,0,
0,0,16,0,0,0,
2,0,0,0,108,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,35,1,0,0,
103,108,111,98,97,108,
95,79,117,116,112,117,
116,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
98,1,0,0,103,108,
111,98,97,108,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
103,108,111,98,97,108,
95,83,111,117,114,99,
101,83,105,122,101,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,171,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,248,0,0,0,
9,0,0,0,8,0,
0,0,224,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,224,0,0,0,
6,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,3,
0,0,224,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,15,0,
0,0,224,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
2,0,0,0,15,0,
0,0,224,0,0,0,
3,0,0,0,0,0,
0,0,3,0,0,0,
3,0,0,0,15,0,
0,0,224,0,0,0,
4,0,0,0,0,0,
0,0,3,0,0,0,
4,0,0,0,15,0,
0,0,224,0,0,0,
5,0,0,0,0,0,
0,0,3,0,0,0,
5,0,0,0,15,0,
0,0,224,0,0,0,
7,0,0,0,0,0,
0,0,3,0,0,0,
6,0,0,0,3,12,
0,0,233,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
7,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
80,3,0,0,80,0,
1,0,212,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,7,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,101,0,0,3,
194,32,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,1,0,
0,0,101,0,0,3,
242,32,16,0,2,0,
0,0,101,0,0,3,
242,32,16,0,3,0,
0,0,101,0,0,3,
242,32,16,0,4,0,
0,0,101,0,0,3,
242,32,16,0,5,0,
0,0,101,0,0,3,
50,32,16,0,6,0,
0,0,103,0,0,4,
242,32,16,0,7,0,
0,0,1,0,0,0,
104,0,0,2,1,0,
0,0,54,0,0,5,
242,32,16,0,0,0,
0,0,70,20,16,0,
1,0,0,0,54,0,
0,5,66,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,0,
54,0,0,7,130,0,
16,0,0,0,0,0,
58,128,32,128,65,0,
0,0,0,0,0,0,
6,0,0,0,0,0,
0,7,194,32,16,0,
1,0,0,0,166,14,
16,0,0,0,0,0,
6,20,16,0,1,0,
0,0,0,0,0,9,
50,32,16,0,1,0,
0,0,70,16,16,0,
1,0,0,0,230,138,
32,128,65,0,0,0,
0,0,0,0,6,0,
0,0,54,0,0,8,
242,32,16,0,2,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,54,0,
0,7,66,0,16,0,
0,0,0,0,42,128,
32,128,65,0,0,0,
0,0,0,0,6,0,
0,0,54,0,0,5,
130,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,0,0,
0,7,194,32,16,0,
3,0,0,0,166,14,
16,0,0,0,0,0,
6,20,16,0,1,0,
0,0,50,0,0,13,
50,32,16,0,3,0,
0,0,230,138,32,0,
0,0,0,0,6,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,191,0,0,0,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
50,0,0,13,194,32,
16,0,4,0,0,0,
166,142,32,0,0,0,
0,0,6,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,128,191,0,0,
128,63,6,20,16,0,
1,0,0,0,54,0,
0,6,146,0,16,0,
0,0,0,0,166,142,
32,0,0,0,0,0,
6,0,0,0,54,0,
0,8,98,0,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,7,50,32,
16,0,4,0,0,0,
70,0,16,0,0,0,
0,0,70,16,16,0,
1,0,0,0,0,0,
0,7,50,32,16,0,
5,0,0,0,230,10,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,0,0,0,8,
194,32,16,0,5,0,
0,0,6,20,16,0,
1,0,0,0,166,142,
32,0,0,0,0,0,
6,0,0,0,56,0,
0,8,50,32,16,0,
6,0,0,0,70,16,
16,0,1,0,0,0,
70,128,32,0,0,0,
0,0,6,0,0,0,
56,0,0,8,242,0,
16,0,0,0,0,0,
86,21,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,1,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,6,16,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
166,26,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,2,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,32,16,0,
7,0,0,0,246,31,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,3,0,0,0,
70,14,16,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,22,0,0,0,
1,0,0,0,0,0,
0,0,11,0,0,0,
15,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
6,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,104,250,
245,32,92,29,100,142,
241,150,219,84,74,221,
13,77,1,0,0,0,
52,10,0,0,5,0,
0,0,52,0,0,0,
248,0,0,0,212,1,
0,0,8,2,0,0,
152,9,0,0,82,68,
69,70,188,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
147,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,140,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,95,83,
111,117,114,99,101,95,
115,97,109,112,108,101,
114,0,83,111,117,114,
99,101,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,73,83,71,78,
212,0,0,0,8,0,
0,0,8,0,0,0,
200,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
200,0,0,0,6,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,0,0,0,
200,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
200,0,0,0,2,0,
0,0,0,0,0,0,
3,0,0,0,2,0,
0,0,15,0,0,0,
200,0,0,0,3,0,
0,0,0,0,0,0,
3,0,0,0,3,0,
0,0,15,0,0,0,
200,0,0,0,4,0,
0,0,0,0,0,0,
3,0,0,0,4,0,
0,0,15,0,0,0,
200,0,0,0,5,0,
0,0,0,0,0,0,
3,0,0,0,5,0,
0,0,15,0,0,0,
200,0,0,0,7,0,
0,0,0,0,0,0,
3,0,0,0,6,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,136,7,0,0,
80,0,0,0,226,1,
0,0,106,8,0,1,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,98,16,
0,3,50,16,16,0,
6,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,5,0,0,0,
26,0,0,5,50,0,
16,0,0,0,0,0,
70,16,16,0,6,0,
0,0,0,0,0,10,
242,0,16,0,1,0,
0,0,70,4,16,0,
0,0,0,0,2,64,
0,0,0,0,0,191,
0,0,0,63,0,0,
192,191,0,0,0,63,
15,0,0,7,66,0,
16,0,0,0,0,0,
70,0,16,0,1,0,
0,0,70,0,16,0,
1,0,0,0,15,0,
0,7,130,0,16,0,
0,0,0,0,230,10,
16,0,1,0,0,0,
230,10,16,0,1,0,
0,0,75,0,0,5,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,1,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,130,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,2,64,0,0,
154,153,153,62,61,10,
23,63,174,71,225,61,
0,0,0,0,50,0,
0,9,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
1,64,0,0,200,204,
204,189,1,64,0,0,
102,102,134,63,56,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
58,0,16,0,1,0,
0,0,56,0,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,20,153,93,192,
25,0,0,5,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,56,0,0,7,
114,0,16,0,2,0,
0,0,166,10,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
0,0,0,10,242,0,
16,0,3,0,0,0,
70,4,16,0,0,0,
0,0,2,64,0,0,
0,0,0,191,0,0,
0,191,0,0,0,63,
0,0,0,63,15,0,
0,7,66,0,16,0,
0,0,0,0,230,10,
16,0,3,0,0,0,
230,10,16,0,3,0,
0,0,15,0,0,7,
130,0,16,0,2,0,
0,0,70,0,16,0,
3,0,0,0,70,0,
16,0,3,0,0,0,
75,0,0,5,130,0,
16,0,2,0,0,0,
58,0,16,0,2,0,
0,0,56,0,0,7,
130,0,16,0,2,0,
0,0,58,0,16,0,
2,0,0,0,1,64,
0,0,154,153,25,192,
56,0,0,7,130,0,
16,0,2,0,0,0,
58,0,16,0,1,0,
0,0,58,0,16,0,
2,0,0,0,56,0,
0,7,130,0,16,0,
2,0,0,0,58,0,
16,0,2,0,0,0,
1,64,0,0,59,170,
184,63,25,0,0,5,
130,0,16,0,2,0,
0,0,58,0,16,0,
2,0,0,0,75,0,
0,5,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
56,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,58,0,16,0,
1,0,0,0,56,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
1,64,0,0,20,153,
93,192,25,0,0,5,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,50,0,
0,9,114,0,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
166,10,16,0,0,0,
0,0,70,2,16,0,
2,0,0,0,56,0,
0,7,66,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
58,0,16,0,1,0,
0,0,56,0,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,20,153,93,192,
25,0,0,5,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,50,0,0,9,
114,0,16,0,2,0,
0,0,70,2,16,0,
1,0,0,0,166,10,
16,0,0,0,0,0,
70,2,16,0,2,0,
0,0,0,0,0,10,
242,0,16,0,3,0,
0,0,70,4,16,0,
0,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,191,0,0,
192,191,0,0,0,191,
15,0,0,7,66,0,
16,0,0,0,0,0,
70,0,16,0,3,0,
0,0,70,0,16,0,
3,0,0,0,15,0,
0,7,130,0,16,0,
0,0,0,0,230,10,
16,0,3,0,0,0,
230,10,16,0,3,0,
0,0,75,0,0,5,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,56,0,
0,7,194,0,16,0,
0,0,0,0,166,14,
16,0,0,0,0,0,
246,15,16,0,1,0,
0,0,56,0,0,10,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,20,153,
93,192,20,153,93,192,
25,0,0,5,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,25,0,0,5,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,50,0,
0,9,114,0,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
166,10,16,0,0,0,
0,0,70,2,16,0,
2,0,0,0,50,0,
0,9,114,0,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
246,15,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,56,0,
0,7,114,0,16,0,
3,0,0,0,70,2,
16,0,1,0,0,0,
246,15,16,0,2,0,
0,0,50,0,0,9,
114,0,16,0,2,0,
0,0,70,2,16,0,
1,0,0,0,246,15,
16,0,0,0,0,0,
70,2,16,0,2,0,
0,0,0,0,0,10,
242,0,16,0,4,0,
0,0,70,4,16,0,
0,0,0,0,2,64,
0,0,0,0,0,63,
0,0,192,191,0,0,
0,191,0,0,192,191,
0,0,0,10,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,2,64,0,0,
0,0,192,191,0,0,
192,191,0,0,0,0,
0,0,0,0,15,0,
0,7,18,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,75,0,0,5,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,56,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
58,0,16,0,1,0,
0,0,56,0,0,7,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,20,153,93,192,
25,0,0,5,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,15,0,0,7,
34,0,16,0,0,0,
0,0,70,0,16,0,
4,0,0,0,70,0,
16,0,4,0,0,0,
15,0,0,7,66,0,
16,0,0,0,0,0,
230,10,16,0,4,0,
0,0,230,10,16,0,
4,0,0,0,75,0,
0,5,98,0,16,0,
0,0,0,0,86,6,
16,0,0,0,0,0,
56,0,0,7,98,0,
16,0,0,0,0,0,
86,6,16,0,0,0,
0,0,246,15,16,0,
1,0,0,0,56,0,
0,10,98,0,16,0,
0,0,0,0,86,6,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,20,153,93,192,
20,153,93,192,0,0,
0,0,25,0,0,5,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,25,0,
0,5,34,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
50,0,0,9,114,0,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,86,5,16,0,
0,0,0,0,70,2,
16,0,2,0,0,0,
50,0,0,9,226,0,
16,0,0,0,0,0,
6,9,16,0,1,0,
0,0,166,10,16,0,
0,0,0,0,6,9,
16,0,2,0,0,0,
50,0,0,9,114,0,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,6,0,16,0,
0,0,0,0,150,7,
16,0,0,0,0,0,
50,0,0,13,114,0,
16,0,0,0,0,0,
70,2,16,128,65,0,
0,0,3,0,0,0,
2,64,0,0,154,153,
153,63,154,153,153,63,
154,153,153,63,0,0,
0,0,70,2,16,0,
0,0,0,0,56,0,
0,10,114,0,16,0,
1,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,154,153,
153,63,154,153,153,63,
154,153,153,63,0,0,
0,0,50,0,0,12,
114,32,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,2,64,
0,0,102,102,38,63,
102,102,38,63,102,102,
38,63,0,0,0,0,
70,2,16,0,1,0,
0,0,54,0,0,5,
130,32,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,62,0,
0,1,83,84,65,84,
148,0,0,0,63,0,
0,0,5,0,0,0,
0,0,0,0,3,0,
0,0,60,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class HandheldShadersDotShaderDef : public ShaderDef
{
public:
	HandheldShadersDotShaderDef() : ShaderDef{}
	{
		Name = "dot";
		VertexByteCode = RetroArchHandheldShadersDotShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchHandheldShadersDotShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchHandheldShadersDotShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchHandheldShadersDotShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
